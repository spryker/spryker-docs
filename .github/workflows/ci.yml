name: CI Ultra Optimized

on:
  push:
    branches:
      - 'master'
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  jekyll_build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
          bundler-cache: true

      # Cache Jekyll incremental build
      - name: Cache Jekyll build
        uses: actions/cache@v4
        with:
          path: |
            .jekyll-cache
            .sass-cache
          key: jekyll-${{ runner.os }}-${{ hashFiles('_config*.yml', 'Gemfile.lock') }}-${{ hashFiles('**/*.md', '**/*.html', '**/*.yml') }}
          restore-keys: |
            jekyll-${{ runner.os }}-${{ hashFiles('_config*.yml', 'Gemfile.lock') }}-

      - name: Build Jekyll site
        run: bundle exec jekyll build --config=_config.yml,_config_production.yml --incremental -t

      - name: Pack artifacts (compressed)
        run: tar -czf result.tar.gz _site

      - uses: actions/upload-artifact@v4
        with:
          name: build-result
          path: result.tar.gz
          retention-days: 1

  # OPTION 1: Single comprehensive validation (FASTEST - ~5-10 minutes)
  link_validation_single:
    name: Links validation (single pass)
    needs: jekyll_build
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'  # Use single pass for PR/push

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
          bundler-cache: true

      # Get current hour for external URL cache (1h expiry)
      - name: Get current hour
        id: date
        run: echo "hour=$(date +'%Y%m%d%H')" >> $GITHUB_OUTPUT

      - name: Cache HTMLProofer (external URLs only, 1h expiry)
        uses: actions/cache@v4
        with:
          path: tmp/.htmlproofer
          # Hour-based key for external URL cache only
          key: ${{ runner.os }}-all-docs-htmlproofer-${{ steps.date.outputs.hour }}-${{ hashFiles('_site/**/*.html') }}
          restore-keys: |
            ${{ runner.os }}-all-docs-htmlproofer-${{ steps.date.outputs.hour }}-
            ${{ runner.os }}-all-docs-htmlproofer-

      - uses: actions/download-artifact@v4
        with:
          name: build-result

      - name: Unpack artifacts
        run: tar -xf result.tar.gz

      - name: Validate all links in one pass
        run: bundle exec rake check_all_fast

  # OPTION 2: Parallel validation by section (THOROUGH - for scheduled runs)
  link_validation_parallel:
    name: Links validation (${{ matrix.section }})
    needs: jekyll_build
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'  # Use parallel for scheduled comprehensive checks
    strategy:
      matrix:
        section: [ca, about, pbc, dg, integrations]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
          bundler-cache: true

      # Get current hour for external URL cache (1h expiry)
      - name: Get current hour
        id: date
        run: echo "hour=$(date +'%Y%m%d%H')" >> $GITHUB_OUTPUT

      - name: Cache HTMLProofer (external URLs only, 1h expiry)
        uses: actions/cache@v4
        with:
          path: tmp/.htmlproofer
          # Hour-based key for external URL cache only
          key: ${{ runner.os }}-${{ matrix.section }}-htmlproofer-${{ steps.date.outputs.hour }}-${{ hashFiles('_site/**/*.html') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.section }}-htmlproofer-${{ steps.date.outputs.hour }}-
            ${{ runner.os }}-${{ matrix.section }}-htmlproofer-

      - uses: actions/download-artifact@v4
        with:
          name: build-result

      - name: Unpack artifacts
        run: tar -xf result.tar.gz

      - name: Validate links for ${{ matrix.section }}
        run: bundle exec rake check_${{ matrix.section }}

  page_validation:
    name: Page validation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
          bundler-cache: true

      - run: bundle exec jekyll validate

  deploy:
    runs-on: ubuntu-latest
    needs: [jekyll_build, link_validation_single]
    if: github.ref == 'refs/heads/master' && github.event_name != 'schedule'
    steps:
      - uses: actions/checkout@v4
      - uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}