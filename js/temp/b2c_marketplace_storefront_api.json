{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "contact": {
      "name": "Spryker",
      "url": "https://support.spryker.com/",
      "email": "support@spryker.com"
    },
    "title": "Spryker API",
    "license": {
      "name": "MIT"
    }
  },
  "tags": [
    {
      "name": "abstract-alternative-products"
    },
    {
      "name": "abstract-product-availabilities"
    },
    {
      "name": "abstract-product-image-sets"
    },
    {
      "name": "abstract-product-prices"
    },
    {
      "name": "abstract-products"
    },
    {
      "name": "access-tokens"
    },
    {
      "name": "addresses"
    },
    {
      "name": "agent-access-tokens"
    },
    {
      "name": "agent-customer-impersonation-access-tokens"
    },
    {
      "name": "agent-customer-search"
    },
    {
      "name": "availability-notifications"
    },
    {
      "name": "bundled-products"
    },
    {
      "name": "cart-codes"
    },
    {
      "name": "cart-reorder"
    },
    {
      "name": "carts"
    },
    {
      "name": "catalog-search"
    },
    {
      "name": "catalog-search-suggestions"
    },
    {
      "name": "category-nodes"
    },
    {
      "name": "category-trees"
    },
    {
      "name": "checkout"
    },
    {
      "name": "checkout-data"
    },
    {
      "name": "cms-pages"
    },
    {
      "name": "concrete-alternative-products"
    },
    {
      "name": "concrete-product-availabilities"
    },
    {
      "name": "concrete-product-image-sets"
    },
    {
      "name": "concrete-product-prices"
    },
    {
      "name": "concrete-products"
    },
    {
      "name": "configurable-bundle-templates"
    },
    {
      "name": "configured-bundles"
    },
    {
      "name": "content-banners"
    },
    {
      "name": "content-product-abstract-lists"
    },
    {
      "name": "customer-access"
    },
    {
      "name": "customer-confirmation"
    },
    {
      "name": "customer-forgotten-password"
    },
    {
      "name": "customer-password"
    },
    {
      "name": "customer-restore-password"
    },
    {
      "name": "customers"
    },
    {
      "name": "guest-cart-items"
    },
    {
      "name": "guest-carts"
    },
    {
      "name": "guest-configured-bundles"
    },
    {
      "name": "health-check"
    },
    {
      "name": "items"
    },
    {
      "name": "merchant-addresses"
    },
    {
      "name": "merchant-opening-hours"
    },
    {
      "name": "merchants"
    },
    {
      "name": "multi-factor-auth-trigger"
    },
    {
      "name": "multi-factor-auth-type-activate"
    },
    {
      "name": "multi-factor-auth-type-deactivate"
    },
    {
      "name": "multi-factor-auth-type-verify"
    },
    {
      "name": "multi-factor-auth-types"
    },
    {
      "name": "my-availability-notifications"
    },
    {
      "name": "navigations"
    },
    {
      "name": "order-payments"
    },
    {
      "name": "orders"
    },
    {
      "name": "payment-cancellations"
    },
    {
      "name": "payment-customers"
    },
    {
      "name": "payments"
    },
    {
      "name": "product-labels"
    },
    {
      "name": "product-management-attributes"
    },
    {
      "name": "product-offer-availabilities"
    },
    {
      "name": "product-offer-prices"
    },
    {
      "name": "product-offer-service-point-availabilities"
    },
    {
      "name": "product-offers"
    },
    {
      "name": "product-reviews"
    },
    {
      "name": "product-tax-sets"
    },
    {
      "name": "refresh-tokens"
    },
    {
      "name": "related-products"
    },
    {
      "name": "return-reasons"
    },
    {
      "name": "returns"
    },
    {
      "name": "service-point-addresses"
    },
    {
      "name": "service-points"
    },
    {
      "name": "shipment-types"
    },
    {
      "name": "stores"
    },
    {
      "name": "tax-id-validate"
    },
    {
      "name": "token"
    },
    {
      "name": "up-selling-products"
    },
    {
      "name": "url-resolver"
    },
    {
      "name": "vouchers"
    },
    {
      "name": "wishlist-items"
    },
    {
      "name": "wishlists"
    }
  ],
  "servers": [
    {
      "url": "http://glue.eu.spryker.local"
    },
    {
      "url": "{Add your own server URL here}",
      "description": "Replace with your own environment.",
      "variables": {
        "Add your own server URL here": {
          "default": "http://glue.eu.spryker.local"
        }
      }
    }
  ],
  "paths": {
    "/concrete-products/{concreteProductId}": {
      "get": {
        "summary": "Retrieves product concrete by id.",
        "tags": [
          "concrete-products"
        ],
        "parameters": [
          {
            "name": "concreteProductId",
            "in": "path",
            "required": true,
            "description": "Id of concrete product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-concrete-products",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConcreteProductsRestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Concrete product id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Concrete product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/access-tokens": {
      "post": {
        "summary": "Creates access token for user.",
        "tags": [
          "access-tokens"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestAccessTokensRequest"
              }
            }
          }
        },
        "operationId": "create-access-tokens",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestTokenResponseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Failed to authenticate user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/refresh-tokens": {
      "post": {
        "summary": "Refreshes customer's auth token.",
        "tags": [
          "refresh-tokens"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestRefreshTokensRequest"
              }
            }
          }
        },
        "operationId": "create-refresh-tokens",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestTokenResponseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Failed to authenticate user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/refresh-tokens/{refreshTokenId}": {
      "delete": {
        "summary": "Revokes customer's refresh token.",
        "tags": [
          "refresh-tokens"
        ],
        "parameters": [
          {
            "name": "refreshTokenId",
            "in": "path",
            "required": true,
            "description": "Id of refresh token.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "description": "Locale value relevant for the store.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "delete-refresh-tokens",
        "responses": {
          "204": {
            "description": "No content."
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/catalog-search": {
      "get": {
        "summary": "Catalog search.",
        "tags": [
          "catalog-search"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "description": "Search query string.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "get-collection-of-catalog-search",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCatalogSearchCollectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/stores/{storeId}": {
      "get": {
        "summary": "Retrieves current store data.",
        "tags": [
          "stores"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "description": "Id of store.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-stores",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresRestResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/stores": {
      "get": {
        "summary": "Retrieves current store data in case of Dynamic Store is off and all stores - if the Dynamic Store is on.",
        "tags": [
          "stores"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-stores",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresRestCollectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/catalog-search-suggestions": {
      "get": {
        "summary": "Catalog search suggestions.",
        "tags": [
          "catalog-search-suggestions"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "description": "Search query string.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "get-collection-of-catalog-search-suggestions",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCatalogSearchSuggestionsCollectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/concrete-products/{concreteProductId}/concrete-product-availabilities": {
      "get": {
        "summary": "Retrieves concrete product availabilities.",
        "tags": [
          "concrete-product-availabilities"
        ],
        "parameters": [
          {
            "name": "concreteProductId",
            "in": "path",
            "required": true,
            "description": "Id of concrete product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-concrete-products-concrete-product-availabilities",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestConcreteProductAvailabilityCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Concrete product id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Concrete product availability not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/abstract-products/{abstractProductId}/abstract-product-availabilities": {
      "get": {
        "summary": "Retrieves abstract product availabilities.",
        "tags": [
          "abstract-product-availabilities"
        ],
        "parameters": [
          {
            "name": "abstractProductId",
            "in": "path",
            "required": true,
            "description": "Id of abstract product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-abstract-products-abstract-product-availabilities",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAbstractProductAvailabilityCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Abstract product id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Abstract product availability not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/category-trees": {
      "get": {
        "summary": "Retrieves category tree for specified locale.",
        "tags": [
          "category-trees"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-category-trees",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCategoryTreesCollectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/category-nodes/{categoryNodeId}": {
      "get": {
        "summary": "Retrieves a category node by id.",
        "tags": [
          "category-nodes"
        ],
        "parameters": [
          {
            "name": "categoryNodeId",
            "in": "path",
            "required": true,
            "description": "Id of category node.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-category-nodes",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCategoryNodesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Category node id has not been specified or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Category node not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}": {
      "get": {
        "summary": "Retrieves customer data.",
        "tags": [
          "customers"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "Id of customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-customers",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCustomersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Customer id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Updates customer data.",
        "tags": [
          "customers"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "Id of customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCustomersRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "update-customers",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCustomersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to save customer.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Customer with this email already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Anonymizes customers.",
        "tags": [
          "customers"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "Id of customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "delete-customers",
        "responses": {
          "204": {
            "description": "Expected response to a valid request."
          },
          "400": {
            "description": "Customer id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "get": {
        "summary": "Retrieves customers collection.",
        "tags": [
          "customers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-collection-of-customers",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCustomersCollectionResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates customer.",
        "tags": [
          "customers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCustomersRequest"
              }
            }
          }
        },
        "operationId": "create-customers",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCustomersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Terms and Conditions was not accepted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Customer with this email already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/customer-forgotten-password": {
      "post": {
        "summary": "Sends password restoration email.",
        "tags": [
          "customer-forgotten-password"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCustomerForgottenPasswordRequest"
              }
            }
          }
        },
        "operationId": "create-customer-forgotten-password",
        "responses": {
          "204": {
            "description": "No content."
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/customer-restore-password/{customerRestorePasswordId}": {
      "patch": {
        "summary": "Restores customer password.",
        "tags": [
          "customer-restore-password"
        ],
        "parameters": [
          {
            "name": "customerRestorePasswordId",
            "in": "path",
            "required": true,
            "description": "Id of customer restore password.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCustomerRestorePasswordRequest"
              }
            }
          }
        },
        "operationId": "update-customer-restore-password",
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Customer restore password id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Restore password key is not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/abstract-products/{abstractProductId}": {
      "get": {
        "summary": "Retrieves product abstract by id.",
        "tags": [
          "abstract-products"
        ],
        "parameters": [
          {
            "name": "abstractProductId",
            "in": "path",
            "required": true,
            "description": "Id of abstract product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-abstract-products",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractProductsRestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Abstract product id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Abstract product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/abstract-products/{abstractProductId}/abstract-product-prices": {
      "get": {
        "summary": "Retrieves abstract product prices.",
        "tags": [
          "abstract-product-prices"
        ],
        "parameters": [
          {
            "name": "abstractProductId",
            "in": "path",
            "required": true,
            "description": "Id of abstract product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-abstract-products-abstract-product-prices",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductPricesCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Abstract product id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Abstract product prices not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/concrete-products/{concreteProductId}/concrete-product-prices": {
      "get": {
        "summary": "Retrieves concrete product prices.",
        "tags": [
          "concrete-product-prices"
        ],
        "parameters": [
          {
            "name": "concreteProductId",
            "in": "path",
            "required": true,
            "description": "Id of concrete product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-concrete-products-concrete-product-prices",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductPricesCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Concrete product id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Concrete product prices not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}": {
      "get": {
        "summary": "Retrieves a cart by id.",
        "tags": [
          "carts"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "Id of cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-carts",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Missing access token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Cart not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Updates a cart.",
        "tags": [
          "carts"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "Id of cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCartsRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "update-carts",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Cart id is missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized cart action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Cart with given uuid not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Can’t switch price mode when there are items in the cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes cart by id.",
        "tags": [
          "carts"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "Id of cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "delete-carts",
        "responses": {
          "204": {
            "description": "Expected response to a valid request."
          },
          "400": {
            "description": "Cart id is missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized cart action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Cart not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Cart could not be deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/carts": {
      "get": {
        "summary": "Retrieves list of all customer's carts.",
        "tags": [
          "carts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-collection-of-carts",
        "deprecated": true,
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsCollectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a cart.",
        "tags": [
          "carts"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCartsRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-carts",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized cart action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Customer already has a cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/items": {
      "post": {
        "summary": "Adds an item to the cart.",
        "tags": [
          "items"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "Id of cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCartItemsRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-carts-items",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Cart id is missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized cart action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Cart not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Errors appeared during item creation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/items/{itemId}": {
      "patch": {
        "summary": "Updates cart item quantity.",
        "tags": [
          "items"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "Id of cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "Id of item.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCartItemsRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "update-carts-items",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Cart id or item id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized cart action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Cart or item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Errors appeared during item update.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Removes item from the cart.",
        "tags": [
          "items"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "Id of cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "Id of item.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "delete-carts-items",
        "responses": {
          "204": {
            "description": "Expected response to a valid request."
          },
          "400": {
            "description": "Cart id or item id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized cart action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Cart or cart item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Cart item could not be deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/abstract-products/{abstractProductId}/abstract-product-image-sets": {
      "get": {
        "summary": "Retrieves abstract product image sets.",
        "tags": [
          "abstract-product-image-sets"
        ],
        "parameters": [
          {
            "name": "abstractProductId",
            "in": "path",
            "required": true,
            "description": "Id of abstract product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-abstract-products-abstract-product-image-sets",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductImageSetsCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Abstract product id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Abstract product image sets not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/concrete-products/{concreteProductId}/concrete-product-image-sets": {
      "get": {
        "summary": "Retrieves concrete product image sets.",
        "tags": [
          "concrete-product-image-sets"
        ],
        "parameters": [
          {
            "name": "concreteProductId",
            "in": "path",
            "required": true,
            "description": "Id of concrete product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-concrete-products-concrete-product-image-sets",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductImageSetsCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Concrete product id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Concrete product image sets not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{orderId}": {
      "get": {
        "summary": "Retrieves order by id.",
        "tags": [
          "orders"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "Id of order.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-orders",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestOrderDetailsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Order not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "Retrieves list of orders.",
        "tags": [
          "orders"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-collection-of-orders",
        "deprecated": true,
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestOrdersCollectionResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/wishlists/{wishlistId}": {
      "get": {
        "summary": "Retrieves wishlist data by id.",
        "tags": [
          "wishlists"
        ],
        "parameters": [
          {
            "name": "wishlistId",
            "in": "path",
            "required": true,
            "description": "Id of wishlist.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-wishlists",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestWishlistsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Wishlist not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Updates customer wishlist.",
        "tags": [
          "wishlists"
        ],
        "parameters": [
          {
            "name": "wishlistId",
            "in": "path",
            "required": true,
            "description": "Id of wishlist.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestWishlistsRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "update-wishlists",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestWishlistsResponse"
                }
              }
            }
          },
          "400": {
            "description": "A wishlist with the same name already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Wishlist not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Removes customer wishlist.",
        "tags": [
          "wishlists"
        ],
        "parameters": [
          {
            "name": "wishlistId",
            "in": "path",
            "required": true,
            "description": "Id of wishlist.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "delete-wishlists",
        "responses": {
          "204": {
            "description": "Expected response to a valid request."
          },
          "404": {
            "description": "Wishlist not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/wishlists": {
      "get": {
        "summary": "Retrieves all customer wishlists.",
        "tags": [
          "wishlists"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-collection-of-wishlists",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestWishlistsCollectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates wishlist.",
        "tags": [
          "wishlists"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestWishlistsRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-wishlists",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestWishlistsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Wishlist with the same name already exists, Wishlist name has wrong format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/wishlists/{wishlistId}/wishlist-items": {
      "post": {
        "summary": "Adds an item to the wishlist.",
        "tags": [
          "wishlist-items"
        ],
        "parameters": [
          {
            "name": "wishlistId",
            "in": "path",
            "required": true,
            "description": "Id of wishlist.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestWishlistItemsRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-wishlists-wishlist-items",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestWishlistItemsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Can't add an item.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Wishlist not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/wishlists/{wishlistId}/wishlist-items/{wishlistItemId}": {
      "patch": {
        "summary": "Updates the wishlist item.",
        "tags": [
          "wishlist-items"
        ],
        "parameters": [
          {
            "name": "wishlistId",
            "in": "path",
            "required": true,
            "description": "Id of wishlist.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wishlistItemId",
            "in": "path",
            "required": true,
            "description": "Id of wishlist item.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestWishlistItemsRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "update-wishlists-wishlist-items",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestWishlistItemsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Wishlist not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Cannot update the wishlist list item.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Removes item from the wishlist.",
        "tags": [
          "wishlist-items"
        ],
        "parameters": [
          {
            "name": "wishlistId",
            "in": "path",
            "required": true,
            "description": "Id of wishlist.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "wishlistItemId",
            "in": "path",
            "required": true,
            "description": "Id of wishlist item.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "delete-wishlists-wishlist-items",
        "responses": {
          "204": {
            "description": "Expected response to a valid request."
          },
          "404": {
            "description": "Wishlist not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Wishlist item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/customer-password/{customerPasswordId}": {
      "patch": {
        "summary": "Updates customer password.",
        "tags": [
          "customer-password"
        ],
        "parameters": [
          {
            "name": "customerPasswordId",
            "in": "path",
            "required": true,
            "description": "Id of customer password.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCustomerPasswordRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "update-customer-password",
        "responses": {
          "204": {
            "description": "Expected response to a valid request."
          },
          "400": {
            "description": "Passwords don't match.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Customer unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "406": {
            "description": "Invalid password.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/addresses/{addressId}": {
      "get": {
        "summary": "Retrieves customer address by id.",
        "tags": [
          "addresses"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "Id of customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "description": "Id of address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-customers-addresses",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAddressResponse"
                }
              }
            }
          },
          "404": {
            "description": "Address not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Updates customer address.",
        "tags": [
          "addresses"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "Id of customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "description": "Id of address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestAddressRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "update-customers-addresses",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAddressResponse"
                }
              }
            }
          },
          "400": {
            "description": "Address id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes customer address.",
        "tags": [
          "addresses"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "Id of customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "description": "Id of address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "delete-customers-addresses",
        "responses": {
          "204": {
            "description": "Expected response to a valid request."
          },
          "400": {
            "description": "Address id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Address not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/addresses": {
      "get": {
        "summary": "Retrieves list of all customer addresses.",
        "tags": [
          "addresses"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "Id of customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-collection-of-customers-addresses",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAddressCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Customer not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Address not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates customer address.",
        "tags": [
          "addresses"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "Id of customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestAddressRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-customers-addresses",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAddressResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/guest-carts/{guestCartId}": {
      "get": {
        "summary": "Retrieves a guest cart by id.",
        "tags": [
          "guest-carts"
        ],
        "parameters": [
          {
            "name": "guestCartId",
            "in": "path",
            "required": true,
            "description": "Id of guest cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Anonymous-Customer-Unique-Id",
            "in": "header",
            "required": true,
            "description": "Guest customer unique ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "get-guest-carts",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cart not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Updates a guest cart.",
        "tags": [
          "guest-carts"
        ],
        "parameters": [
          {
            "name": "guestCartId",
            "in": "path",
            "required": true,
            "description": "Id of guest cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Anonymous-Customer-Unique-Id",
            "in": "header",
            "required": true,
            "description": "Guest customer unique ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCartsRequest"
              }
            }
          }
        },
        "operationId": "update-guest-carts",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Cart id is missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Cart with given uuid not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Can’t switch price mode when there are items in the cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/guest-carts": {
      "get": {
        "summary": "Retrieves list of customer's guest carts.",
        "tags": [
          "guest-carts"
        ],
        "parameters": [
          {
            "name": "X-Anonymous-Customer-Unique-Id",
            "in": "header",
            "required": true,
            "description": "Guest customer unique ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "get-collection-of-guest-carts",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsCollectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/guest-carts/{guestCartId}/guest-cart-items": {
      "post": {
        "summary": "Adds an item to the guest cart.",
        "tags": [
          "guest-cart-items"
        ],
        "parameters": [
          {
            "name": "guestCartId",
            "in": "path",
            "required": true,
            "description": "Id of guest cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Anonymous-Customer-Unique-Id",
            "in": "header",
            "required": true,
            "description": "Guest customer unique ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCartItemsRequest"
              }
            }
          }
        },
        "operationId": "create-guest-carts-guest-cart-items",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cart not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/guest-carts/{guestCartId}/guest-cart-items/{guestCartItemId}": {
      "patch": {
        "summary": "Updates guest cart item quantity.",
        "tags": [
          "guest-cart-items"
        ],
        "parameters": [
          {
            "name": "guestCartId",
            "in": "path",
            "required": true,
            "description": "Id of guest cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "guestCartItemId",
            "in": "path",
            "required": true,
            "description": "Id of guest cart item.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Anonymous-Customer-Unique-Id",
            "in": "header",
            "required": true,
            "description": "Guest customer unique ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCartItemsRequest"
              }
            }
          }
        },
        "operationId": "update-guest-carts-guest-cart-items",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Cart id or item id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Item with the given id not found in the cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Removes item from guest cart.",
        "tags": [
          "guest-cart-items"
        ],
        "parameters": [
          {
            "name": "guestCartId",
            "in": "path",
            "required": true,
            "description": "Id of guest cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "guestCartItemId",
            "in": "path",
            "required": true,
            "description": "Id of guest cart item.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Anonymous-Customer-Unique-Id",
            "in": "header",
            "required": true,
            "description": "Guest customer unique ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "delete-guest-carts-guest-cart-items",
        "responses": {
          "204": {
            "description": "Expected response to a valid request."
          },
          "400": {
            "description": "Cart id or item id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Item with the given id not found in the cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Cart item could not be deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/product-labels/{productLabelId}": {
      "get": {
        "summary": "Retrieves abstract product labels by id.",
        "tags": [
          "product-labels"
        ],
        "parameters": [
          {
            "name": "productLabelId",
            "in": "path",
            "required": true,
            "description": "Id of product label.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-product-labels",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductLabelsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Product label id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Product label not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/checkout-data": {
      "post": {
        "summary": "Provides checkout data\n - available addresses\n - shipment methods\n - payment methods",
        "tags": [
          "checkout-data"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          },
          {
            "name": "X-Anonymous-Customer-Unique-Id",
            "in": "header",
            "required": false,
            "description": "Guest customer unique ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCheckoutRequestRequest"
              }
            }
          }
        },
        "operationId": "create-checkout-data",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCheckoutDataResponseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/checkout": {
      "post": {
        "summary": "Places order.",
        "tags": [
          "checkout"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          },
          {
            "name": "X-Anonymous-Customer-Unique-Id",
            "in": "header",
            "required": false,
            "description": "Guest customer unique ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCheckoutRequestRequest"
              }
            }
          }
        },
        "operationId": "create-checkout",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCheckoutResponseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/navigations/{navigationId}": {
      "get": {
        "summary": "Retrieves a navigation by id.",
        "tags": [
          "navigations"
        ],
        "parameters": [
          {
            "name": "navigationId",
            "in": "path",
            "required": true,
            "description": "Id of navigation.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-navigations",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestNavigationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Navigation id not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Navigation not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/abstract-products/{abstractProductId}/related-products": {
      "get": {
        "summary": "Retrieves list of all related products of abstract product.",
        "tags": [
          "related-products"
        ],
        "parameters": [
          {
            "name": "abstractProductId",
            "in": "path",
            "required": true,
            "description": "Id of abstract product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-abstract-products-related-products",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractProductsRestCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Abstract product sku is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Abstract product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/up-selling-products": {
      "get": {
        "summary": "Retrieves list of all up-selling products for the cart.",
        "tags": [
          "up-selling-products"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "Id of cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-collection-of-carts-up-selling-products",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractProductsRestCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Cart id is missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Cart with given id not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/guest-carts/{guestCartId}/up-selling-products": {
      "get": {
        "summary": "Retrieves list of all up-selling products for the guest cart.",
        "tags": [
          "up-selling-products"
        ],
        "parameters": [
          {
            "name": "guestCartId",
            "in": "path",
            "required": true,
            "description": "Id of guest cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          },
          {
            "name": "X-Anonymous-Customer-Unique-Id",
            "in": "header",
            "required": true,
            "description": "Guest customer unique ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "get-collection-of-guest-carts-up-selling-products",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractProductsRestCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Cart id is missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Cart with given id not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/concrete-products/{concreteProductId}/concrete-alternative-products": {
      "get": {
        "summary": "Retrieves concrete alternative products of concrete product.",
        "tags": [
          "concrete-alternative-products"
        ],
        "parameters": [
          {
            "name": "concreteProductId",
            "in": "path",
            "required": true,
            "description": "Id of concrete product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-concrete-products-concrete-alternative-products",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConcreteProductsRestCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Concrete product id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Concrete product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/concrete-products/{concreteProductId}/abstract-alternative-products": {
      "get": {
        "summary": "Retrieves abstract alternative products of concrete product.",
        "tags": [
          "abstract-alternative-products"
        ],
        "parameters": [
          {
            "name": "concreteProductId",
            "in": "path",
            "required": true,
            "description": "Id of concrete product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-concrete-products-abstract-alternative-products",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractProductsRestCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Concrete product id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Concrete product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/abstract-products/{abstractProductId}/product-tax-sets": {
      "get": {
        "summary": "Retrieves abstract product tax sets.",
        "tags": [
          "product-tax-sets"
        ],
        "parameters": [
          {
            "name": "abstractProductId",
            "in": "path",
            "required": true,
            "description": "Id of abstract product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-abstract-products-product-tax-sets",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductTaxSetsCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Abstract product id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Abstract product tax sets not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/order-payments": {
      "post": {
        "summary": "Updates order payment.",
        "tags": [
          "order-payments"
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestOrderPaymentsRequest"
              }
            }
          }
        },
        "operationId": "create-order-payments",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestOrderPaymentsResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/content-banners/{contentBannerId}": {
      "get": {
        "summary": "Retrieve content banner item data.",
        "tags": [
          "content-banners"
        ],
        "parameters": [
          {
            "name": "contentBannerId",
            "in": "path",
            "required": true,
            "description": "Id of content banner.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-content-banners",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestContentBannerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Content key is missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Content not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Content type is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/url-resolver": {
      "get": {
        "summary": "Retrieves collection of urls by the `url` parameter provided in GET request.",
        "tags": [
          "url-resolver"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "description": "URL to resolve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "get-collection-of-url-resolver",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestUrlResolverCollectionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/customer-access": {
      "get": {
        "summary": "Retrieves collection of restricted resources.",
        "tags": [
          "customer-access"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-customer-access",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCustomerAccessCollectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/abstract-products/{abstractProductId}/product-reviews/{productReviewId}": {
      "get": {
        "summary": "Retrieves abstract product review by id.",
        "tags": [
          "product-reviews"
        ],
        "parameters": [
          {
            "name": "abstractProductId",
            "in": "path",
            "required": true,
            "description": "Id of abstract product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productReviewId",
            "in": "path",
            "required": true,
            "description": "Id of product review.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-abstract-products-product-reviews",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductReviewsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Abstract product review not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/abstract-products/{abstractProductId}/product-reviews": {
      "get": {
        "summary": "Retrieves a collection of abstract product reviews by sku.",
        "tags": [
          "product-reviews"
        ],
        "parameters": [
          {
            "name": "abstractProductId",
            "in": "path",
            "required": true,
            "description": "Id of abstract product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-abstract-products-product-reviews",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductReviewsCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Abstract product id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Abstract product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a product review.",
        "tags": [
          "product-reviews"
        ],
        "parameters": [
          {
            "name": "abstractProductId",
            "in": "path",
            "required": true,
            "description": "Id of abstract product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestProductReviewsRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-abstract-products-product-reviews",
        "responses": {
          "202": {
            "description": "Accepted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductReviewsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Abstract product id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Missing access token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Abstract product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/health-check/{healthCheckId}": {
      "get": {
        "summary": "Retrieve services status.",
        "tags": [
          "health-check"
        ],
        "parameters": [
          {
            "name": "healthCheckId",
            "in": "path",
            "required": true,
            "description": "Id of health check.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-health-check",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestHealthCheckResponseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Services are disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "503": {
            "description": "Services are unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/vouchers": {
      "post": {
        "summary": "Applies a discount voucher code to a cart.",
        "tags": [
          "vouchers"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "Id of cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestDiscountsRequestRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-carts-vouchers",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestDiscountsRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Missing access token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Cart with given uuid not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Cart code can't be added.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/vouchers/{voucherCode}": {
      "delete": {
        "summary": "Deletes a discount voucher code from a cart.",
        "tags": [
          "vouchers"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "Id of cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "voucherCode",
            "in": "path",
            "required": true,
            "description": "Id of voucher.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "delete-carts-vouchers",
        "responses": {
          "204": {
            "description": "Expected response to a valid request."
          },
          "401": {
            "description": "Invalid access token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Missing access token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Cart with given uuid not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Cart code not found in cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/guest-carts/{guestCartId}/vouchers": {
      "post": {
        "summary": "Applies a discount voucher code to a guest cart.",
        "tags": [
          "vouchers"
        ],
        "parameters": [
          {
            "name": "guestCartId",
            "in": "path",
            "required": true,
            "description": "Id of guest cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestDiscountsRequestRequest"
              }
            }
          }
        },
        "operationId": "create-guest-carts-vouchers",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestDiscountsRequestResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cart with given uuid not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Cart code can't be added.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/guest-carts/{guestCartId}/vouchers/{voucherCode}": {
      "delete": {
        "summary": "Deletes a discount voucher code from a cart.",
        "tags": [
          "vouchers"
        ],
        "parameters": [
          {
            "name": "guestCartId",
            "in": "path",
            "required": true,
            "description": "Id of guest cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "voucherCode",
            "in": "path",
            "required": true,
            "description": "Id of voucher.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "delete-guest-carts-vouchers",
        "responses": {
          "204": {
            "description": "Expected response to a valid request."
          },
          "404": {
            "description": "Cart with given uuid not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Cart code not found in cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/return-reasons": {
      "get": {
        "summary": "Retrieves list of return reasons.",
        "tags": [
          "return-reasons"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-return-reasons",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestReturnReasonsCollectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/returns/{returnId}": {
      "get": {
        "summary": "Retrieves return by id.",
        "tags": [
          "returns"
        ],
        "parameters": [
          {
            "name": "returnId",
            "in": "path",
            "required": true,
            "description": "Id of return.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-returns",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestReturnsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Return not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/returns": {
      "get": {
        "summary": "Retrieves list of returns.",
        "tags": [
          "returns"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-collection-of-returns",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestReturnRequestCollectionResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a return.",
        "tags": [
          "returns"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestReturnRequestRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-returns",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestReturnRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/cart-codes": {
      "post": {
        "summary": "Applies a gift card code to a cart",
        "tags": [
          "cart-codes"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "Id of cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCartCodeRequestRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-carts-cart-codes",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Missing access token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Cart with given uuid not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Cart code can't be added.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/cart-codes/{cartCodeId}": {
      "delete": {
        "summary": "Deletes a gift card code from a cart.",
        "tags": [
          "cart-codes"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "Id of cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cartCodeId",
            "in": "path",
            "required": true,
            "description": "Id of cart code.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "delete-carts-cart-codes",
        "responses": {
          "204": {
            "description": "Expected response to a valid request."
          },
          "401": {
            "description": "Invalid access token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Missing access token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Cart with given uuid not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Cart code can't be removed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/guest-carts/{guestCartId}/cart-codes": {
      "post": {
        "summary": "Applies a gift card code to a guest cart.",
        "tags": [
          "cart-codes"
        ],
        "parameters": [
          {
            "name": "guestCartId",
            "in": "path",
            "required": true,
            "description": "Id of guest cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCartCodeRequestRequest"
              }
            }
          }
        },
        "operationId": "create-guest-carts-cart-codes",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartCodeRequestResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cart with given uuid not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Cart code can't be added.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/guest-carts/{guestCartId}/cart-codes/{code}": {
      "delete": {
        "summary": "Deletes a gift card code from a guest cart.",
        "tags": [
          "cart-codes"
        ],
        "parameters": [
          {
            "name": "guestCartId",
            "in": "path",
            "required": true,
            "description": "Id of guest cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "Id of .",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "delete-guest-carts-cart-codes",
        "responses": {
          "204": {
            "description": "Expected response to a valid request."
          },
          "404": {
            "description": "Cart with given uuid not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Cart code can't be removed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/cms-pages/{cmPageId}": {
      "get": {
        "summary": "Retrieves a cms page by uuid.",
        "tags": [
          "cms-pages"
        ],
        "parameters": [
          {
            "name": "cmPageId",
            "in": "path",
            "required": true,
            "description": "Id of cm page.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-cms-pages",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCmsPagesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cms page not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/cms-pages": {
      "get": {
        "summary": "Retrieves list of cms pages.",
        "tags": [
          "cms-pages"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "description": "Search query string.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "get-collection-of-cms-pages",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCmsPagesCollectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/content-product-abstract-lists/{contentProductAbstractListId}/abstract-products": {
      "get": {
        "summary": "Retrieves product abstract list by the content abstract product list content item.",
        "tags": [
          "abstract-products"
        ],
        "parameters": [
          {
            "name": "contentProductAbstractListId",
            "in": "path",
            "required": true,
            "description": "Id of content product abstract list.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-content-product-abstract-lists-abstract-products",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbstractProductsRestCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Content key is missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Content item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Content type is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/content-product-abstract-lists/{contentProductAbstractListId}": {
      "get": {
        "summary": "Retrieves content item abstract list.",
        "tags": [
          "content-product-abstract-lists"
        ],
        "parameters": [
          {
            "name": "contentProductAbstractListId",
            "in": "path",
            "required": true,
            "description": "Id of content product abstract list.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-content-product-abstract-lists",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentProductAbstractListsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Content key is missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Content item not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/agent-access-tokens": {
      "post": {
        "summary": "Creates agent's access token.",
        "tags": [
          "agent-access-tokens"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestAgentAccessTokensRequestRequest"
              }
            }
          }
        },
        "operationId": "create-agent-access-tokens",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAgentAccessTokensResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Failed to authenticate user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/agent-customer-impersonation-access-tokens": {
      "post": {
        "summary": "Creates customer imprsonation access token.",
        "tags": [
          "agent-customer-impersonation-access-tokens"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestAgentCustomerImpersonationAccessTokensRequestRequest"
              }
            }
          }
        },
        "operationId": "create-agent-customer-impersonation-access-tokens",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAgentCustomerImpersonationAccessTokensResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Action is available to agent user only.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/agent-customer-search": {
      "get": {
        "summary": "Retrieves customer list by query provided in GET parameteres.",
        "tags": [
          "agent-customer-search"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "description": "Search query string.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "get-collection-of-agent-customer-search",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAgentCustomerSearchCollectionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Action is available to agent user only.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/concrete-products/{concreteProductId}/bundled-products": {
      "get": {
        "summary": "Retrieves a collection of bundled products for product concrete.",
        "tags": [
          "bundled-products"
        ],
        "parameters": [
          {
            "name": "concreteProductId",
            "in": "path",
            "required": true,
            "description": "Id of concrete product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-concrete-products-bundled-products",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestBundledProductsCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Product concrete SKU is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Product concrete not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/product-management-attributes/{productManagementAttributeId}": {
      "get": {
        "summary": "Retrieves attribute by id.",
        "tags": [
          "product-management-attributes"
        ],
        "parameters": [
          {
            "name": "productManagementAttributeId",
            "in": "path",
            "required": true,
            "description": "Id of product management attribute.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-product-management-attributes",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductManagementAttributeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Attribute not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/product-management-attributes": {
      "get": {
        "summary": "Retrieves list of attributes.",
        "tags": [
          "product-management-attributes"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-product-management-attributes",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductManagementAttributeCollectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/customer-confirmation": {
      "post": {
        "summary": "Confirms customer registration.",
        "tags": [
          "customer-confirmation"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCustomerConfirmationRequest"
              }
            }
          }
        },
        "operationId": "create-customer-confirmation",
        "responses": {
          "204": {
            "description": "No content."
          },
          "422": {
            "description": "This email confirmation code is invalid or has been already used.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/token": {
      "post": {
        "summary": "Create token.",
        "tags": [
          "token"
        ],
        "operationId": "create-token",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestTokenResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/orders": {
      "get": {
        "summary": "Retrieves list of orders.",
        "tags": [
          "orders"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "Id of customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-collection-of-customers-orders",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestOrdersCollectionResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/carts": {
      "get": {
        "summary": "Retrieves list of carts.",
        "tags": [
          "carts"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "Id of customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-collection-of-customers-carts",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsCollectionResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/availability-notifications": {
      "post": {
        "summary": "Subscribe to receive a notification by email when product is back in stock.",
        "tags": [
          "availability-notifications"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "create-availability-notifications",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAvailabilityNotificationsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Product not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/availability-notifications/{availabilityNotificationId}": {
      "delete": {
        "summary": "Unsubscribe from receiving notifications.",
        "tags": [
          "availability-notifications"
        ],
        "parameters": [
          {
            "name": "availabilityNotificationId",
            "in": "path",
            "required": true,
            "description": "Id of availability notification.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "delete-availability-notifications",
        "responses": {
          "204": {
            "description": "Expected response to a valid request."
          },
          "400": {
            "description": "Resource id has not been specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Subscription doesn't exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{customerId}/availability-notifications": {
      "get": {
        "summary": "Retrieves a collection of notification subscriptions about products availability filtered by the customer in the parent resource.",
        "tags": [
          "availability-notifications"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "Id of customer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-collection-of-customers-availability-notifications",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAvailabilityNotificationsCollectionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/configurable-bundle-templates/{configurableBundleTemplateId}": {
      "get": {
        "summary": "Retrieves configurable bundle template by id.",
        "tags": [
          "configurable-bundle-templates"
        ],
        "parameters": [
          {
            "name": "configurableBundleTemplateId",
            "in": "path",
            "required": true,
            "description": "Id of configurable bundle template.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-configurable-bundle-templates",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestConfigurableBundleTemplatesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/configurable-bundle-templates": {
      "get": {
        "summary": "Retrieves collection of ConfigurableBundleTemplates.",
        "tags": [
          "configurable-bundle-templates"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-configurable-bundle-templates",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestConfigurableBundleTemplatesCollectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/my-availability-notifications": {
      "get": {
        "summary": "Retrieves a collection of notification subscriptions about products availability filtered by the current logged in customer.",
        "tags": [
          "my-availability-notifications"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-collection-of-my-availability-notifications",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestAvailabilityNotificationsCollectionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid access token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Missing access token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/configured-bundles": {
      "post": {
        "summary": "Adds a configured bundle to the cart.",
        "tags": [
          "configured-bundles"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "Id of cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestConfiguredBundlesRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-carts-configured-bundles",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Cart id is missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized cart action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Errors appeared during configured bundle creation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/carts/{cartId}/configured-bundles/{configuredBundleId}": {
      "patch": {
        "summary": "Updates configured bundle quantity.",
        "tags": [
          "configured-bundles"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "Id of cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configuredBundleId",
            "in": "path",
            "required": true,
            "description": "Id of configured bundle.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestConfiguredBundlesRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "update-carts-configured-bundles",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Configured bundle with provided group key not found in cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized cart action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Errors appeared during configured bundle update.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Removes configured bundle from the cart.",
        "tags": [
          "configured-bundles"
        ],
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "Id of cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configuredBundleId",
            "in": "path",
            "required": true,
            "description": "Id of configured bundle.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "delete-carts-configured-bundles",
        "responses": {
          "204": {
            "description": "Expected response to a valid request."
          },
          "400": {
            "description": "Configured bundle with provided group key not found in cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized cart action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Errors appeared during configured bundle deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/guest-carts/{guestCartId}/guest-configured-bundles/{configuredBundleId}": {
      "post": {
        "summary": "Adds a configured bundle to the guest cart.",
        "tags": [
          "guest-configured-bundles"
        ],
        "parameters": [
          {
            "name": "guestCartId",
            "in": "path",
            "required": true,
            "description": "Id of guest cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configuredBundleId",
            "in": "path",
            "required": true,
            "description": "Id of configured bundle.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Anonymous-Customer-Unique-Id",
            "in": "header",
            "required": true,
            "description": "Guest customer unique ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestConfiguredBundlesRequest"
              }
            }
          }
        },
        "operationId": "create-guest-carts-guest-configured-bundles",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized cart action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Errors appeared during configured bundle creation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Updates configured bundle quantity from the guest cart.",
        "tags": [
          "guest-configured-bundles"
        ],
        "parameters": [
          {
            "name": "guestCartId",
            "in": "path",
            "required": true,
            "description": "Id of guest cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configuredBundleId",
            "in": "path",
            "required": true,
            "description": "Id of configured bundle.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Anonymous-Customer-Unique-Id",
            "in": "header",
            "required": true,
            "description": "Guest customer unique ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestConfiguredBundlesRequest"
              }
            }
          }
        },
        "operationId": "update-guest-carts-guest-configured-bundles",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Configured bundle with provided group key not found in cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized cart action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Errors appeared during configured bundle update.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Removes configured bundle from the guest cart.",
        "tags": [
          "guest-configured-bundles"
        ],
        "parameters": [
          {
            "name": "guestCartId",
            "in": "path",
            "required": true,
            "description": "Id of guest cart.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configuredBundleId",
            "in": "path",
            "required": true,
            "description": "Id of configured bundle.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Anonymous-Customer-Unique-Id",
            "in": "header",
            "required": true,
            "description": "Guest customer unique ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "delete-guest-carts-guest-configured-bundles",
        "responses": {
          "204": {
            "description": "Expected response to a valid request."
          },
          "400": {
            "description": "Configured bundle with provided group key not found in cart.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized cart action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Errors appeared during configured bundle deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/merchants/{merchantId}": {
      "get": {
        "summary": "Retrieves a merchant by id.",
        "tags": [
          "merchants"
        ],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "description": "Id of merchant.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-merchants",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestMerchantsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Merchant identifier is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Merchant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/merchants": {
      "get": {
        "summary": "Retrieves list of merchants.",
        "tags": [
          "merchants"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-merchants",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestMerchantsCollectionResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/merchants/{merchantId}/merchant-addresses": {
      "get": {
        "summary": "Retrieves merchant addresses.",
        "tags": [
          "merchant-addresses"
        ],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "description": "Id of merchant.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-merchants-merchant-addresses",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Merchant identifier is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Merchant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/product-offers/{productOfferId}": {
      "get": {
        "summary": "Retrieves a collection of product offers.",
        "tags": [
          "product-offers"
        ],
        "parameters": [
          {
            "name": "productOfferId",
            "in": "path",
            "required": true,
            "description": "Id of product offer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-product-offers",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductOffersResponse"
                }
              }
            }
          },
          "400": {
            "description": "Product offer id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Product offer not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/concrete-products/{concreteProductId}/product-offers": {
      "get": {
        "summary": "Retrieves a collection of product offers for product concrete.",
        "tags": [
          "product-offers"
        ],
        "parameters": [
          {
            "name": "concreteProductId",
            "in": "path",
            "required": true,
            "description": "Id of concrete product.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-concrete-products-product-offers",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductOffersCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Product concrete SKU is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Product concrete not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/merchants/{merchantId}/merchant-opening-hours": {
      "get": {
        "summary": "Retrieves merchant opening hours.",
        "tags": [
          "merchant-opening-hours"
        ],
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "description": "Id of merchant.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-merchants-merchant-opening-hours",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Merchant identifier is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Merchant not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/product-offers/{productOfferId}/product-offer-prices": {
      "get": {
        "summary": "Retrieves collection of product-offer-prices.",
        "tags": [
          "product-offer-prices"
        ],
        "parameters": [
          {
            "name": "productOfferId",
            "in": "path",
            "required": true,
            "description": "Id of product offer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-product-offers-product-offer-prices",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductOfferPricesCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Product offer id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/product-offers/{productOfferId}/product-offer-availabilities": {
      "get": {
        "summary": "Retrieves collection of product-offer-availabilities.",
        "tags": [
          "product-offer-availabilities"
        ],
        "parameters": [
          {
            "name": "productOfferId",
            "in": "path",
            "required": true,
            "description": "Id of product offer.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "operationId": "get-collection-of-product-offers-product-offer-availabilities",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductOfferAvailabilitiesCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Product offer id is not specified.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/service-points/{servicePointId}": {
      "get": {
        "summary": "Retrieves a service point by uuid.",
        "tags": [
          "service-points"
        ],
        "parameters": [
          {
            "name": "servicePointId",
            "in": "path",
            "required": true,
            "description": "Id of service point.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "description": "Content-Type header required for all the requests.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "required": false,
            "description": "Parameter is used to extract specified items fields.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "get-service-points",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestServicePointsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/service-points": {
      "get": {
        "summary": "Retrieves service points collection.",
        "tags": [
          "service-points"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "description": "Content-Type header required for all the requests.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "required": false,
            "description": "Parameter is used to extract specified items fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "required": false,
            "description": "The parameter is used to filter items by specified values.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": false,
            "description": "The parameter is used to control the pagination behavior of the result set of API response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "description": "The parameter is used to represent a search query.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "required": false,
            "description": "The parameter used to specify the sorting order of the result set of API response. To specify the sort direction, prepend a hyphen '-' in front of the field name, indicating descending order.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "get-collection-of-service-points",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestServicePointsCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/service-points/{servicePointId}/service-point-addresses/{servicePointAddressId}": {
      "get": {
        "summary": "Retrieves service point address by uuid.",
        "tags": [
          "service-point-addresses"
        ],
        "parameters": [
          {
            "name": "servicePointId",
            "in": "path",
            "required": true,
            "description": "Id of service point.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "servicePointAddressId",
            "in": "path",
            "required": true,
            "description": "Id of service point address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "description": "Content-Type header required for all the requests.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "required": false,
            "description": "Parameter is used to extract specified items fields.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "get-service-points-service-point-addresses",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestServicePointAddressesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/shipment-types/{shipmentTypeId}": {
      "get": {
        "summary": "Retrieves a shipment type by uuid.",
        "tags": [
          "shipment-types"
        ],
        "parameters": [
          {
            "name": "shipmentTypeId",
            "in": "path",
            "required": true,
            "description": "Id of shipment type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/acceptLanguage"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "description": "Parameter is used to extract specified shipment type fields.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "get-shipment-types",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestShipmentTypesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/shipment-types": {
      "get": {
        "summary": "Retrieves a shipment types collection.",
        "tags": [
          "shipment-types"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "description": "Parameter is used to extract specified items fields.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "Parameter is used to sort items. Use dash `-` for DESC direction. Only sorting by key is supported.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "get-collection-of-shipment-types",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestShipmentTypesCollectionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/product-offer-service-point-availabilities": {
      "post": {
        "summary": "Returns list of Product Offer Service Point Availabilities filtered by criteria.\nResponse items have `identifier` field equal to initial index in request array. This field is considered to be used for response-to-request mapping purposes.",
        "tags": [
          "product-offer-service-point-availabilities"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "description": "Content-Type header required for all the requests.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "create-product-offer-service-point-availabilities",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestProductOfferServicePointAvailabilitiesResponseAttributesCollectionTransfer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/payments": {
      "post": {
        "summary": "Creates a pre-order payment and returns payment provider data that should be used on the store front payment page.",
        "tags": [
          "payments"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestPreOrderPaymentRequestRequest"
              }
            }
          }
        },
        "operationId": "create-payments",
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreOrderPaymentResponseTransfer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Failed to authenticate user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/payment-cancellations": {
      "post": {
        "summary": "Cancels a pre-order payment.",
        "tags": [
          "payment-cancellations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestPreOrderPaymentCancellationRequestRequest"
              }
            }
          }
        },
        "operationId": "create-payment-cancellations",
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreOrderPaymentResponseTransfer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Failed to authenticate user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/payment-customers": {
      "post": {
        "summary": "Returns customer data that should be used on the store front address page.",
        "tags": [
          "payment-customers"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestPaymentCustomersRequestRequest"
              }
            }
          }
        },
        "operationId": "create-payment-customers",
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestPaymentCustomersResponseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "401": {
            "description": "Failed to authenticate user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/tax-id-validate": {
      "post": {
        "summary": "Create tax id validate.",
        "tags": [
          "tax-id-validate"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-tax-id-validate",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestTaxAppValidationResponse"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/multi-factor-auth-types": {
      "get": {
        "summary": "Retrieves multi-factor authentication types.",
        "tags": [
          "multi-factor-auth-types"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "get-collection-of-multi-factor-auth-types",
        "responses": {
          "200": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestMultiFactorAuthCollectionResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/multi-factor-auth-trigger": {
      "post": {
        "summary": "Triggers sending of multi-factor authentication code.",
        "tags": [
          "multi-factor-auth-trigger"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-multi-factor-auth-trigger",
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/multi-factor-auth-type-activate": {
      "post": {
        "summary": "Activates a new multi-factor authentication type for a customer",
        "tags": [
          "multi-factor-auth-type-activate"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-multi-factor-auth-type-activate",
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/multi-factor-auth-type-verify": {
      "post": {
        "summary": "Verifies a multi-factor authentication code for a specific type",
        "tags": [
          "multi-factor-auth-type-verify"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-multi-factor-auth-type-verify",
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/multi-factor-auth-type-deactivate": {
      "post": {
        "summary": "Deactivates a multi-factor authentication type for a customer",
        "tags": [
          "multi-factor-auth-type-deactivate"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-multi-factor-auth-type-deactivate",
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/cart-reorder": {
      "post": {
        "summary": "Makes cart reorder from existing order.",
        "tags": [
          "cart-reorder"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/acceptLanguage"
          },
          {
            "name": "orderReference",
            "in": "query",
            "required": true,
            "description": "Order reference of existing order that should be updated.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Expected request body.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestCartReorderRequestRequest"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "operationId": "create-cart-reorder",
        "responses": {
          "201": {
            "description": "Expected response to a valid request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestCartsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Order reference is missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized cart action.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Order not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Errors appeared during cart reordering.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          },
          "default": {
            "description": "Expected response to a bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestErrorMessage"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "AbstractProductsRestAttributes": {
        "properties": {
          "sku": {
            "type": "string"
          },
          "merchantReference": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {}
          },
          "averageRating": {
            "type": "number"
          },
          "reviewCount": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "superAttributesDefinition": {
            "type": "array",
            "items": {}
          },
          "superAttributes": {
            "type": "array",
            "items": {}
          },
          "attributeMap": {
            "type": "array",
            "items": {}
          },
          "metaTitle": {
            "type": "string"
          },
          "metaKeywords": {
            "type": "string"
          },
          "metaDescription": {
            "type": "string"
          },
          "attributeNames": {
            "type": "array",
            "items": {}
          },
          "url": {
            "type": "string"
          }
        }
      },
      "AbstractProductsRestCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AbstractProductsRestCollectionResponseData"
            }
          },
          "included": {
            "$ref": "#/components/schemas/AbstractProductsRestIncluded"
          }
        }
      },
      "AbstractProductsRestCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AbstractProductsRestAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/AbstractProductsRestRelationships"
          }
        }
      },
      "AbstractProductsRestIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/ConcreteProductsRestResponseData"
            },
            {
              "$ref": "#/components/schemas/RestConcreteProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductLabelsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductReviewsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOptionsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestBundledProductsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/AbstractProductsRestCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestAbstractProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestCategoryNodesResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductTaxSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOffersCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferAvailabilitiesCollectionResponseData"
            }
          ]
        },
        "type": "array"
      },
      "AbstractProductsRestRelationships": {
        "properties": {
          "abstract-product-image-sets": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "concrete-products": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "abstract-product-availabilities": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "abstract-product-prices": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "category-nodes": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "product-labels": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "product-tax-sets": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "product-reviews": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "product-options": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "merchants": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "AbstractProductsRestResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AbstractProductsRestResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/AbstractProductsRestIncluded"
          }
        }
      },
      "AbstractProductsRestResponseData": {
        "properties": {
          "relationships": {
            "$ref": "#/components/schemas/AbstractProductsRestRelationships"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/AbstractProductsRestAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "CheckoutConfiguration": {
        "properties": {
          "appPaymentMethodKey": {
            "type": "string"
          },
          "scripts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Script"
            }
          },
          "strategy": {
            "type": "string"
          },
          "paymentServiceProviderData": {
            "type": "array",
            "items": {}
          }
        }
      },
      "ConcreteProductsRestAttributes": {
        "properties": {
          "attributes": {
            "type": "array",
            "items": {}
          },
          "sku": {
            "type": "string"
          },
          "productConfigurationInstance": {
            "$ref": "#/components/schemas/RestProductConfigurationInstanceAttributes"
          },
          "isDiscontinued": {
            "type": "boolean"
          },
          "discontinuedNote": {
            "type": "string"
          },
          "averageRating": {
            "type": "number"
          },
          "reviewCount": {
            "type": "integer"
          },
          "productAbstractSku": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "superAttributesDefinition": {
            "type": "array",
            "items": {}
          },
          "metaTitle": {
            "type": "string"
          },
          "metaKeywords": {
            "type": "string"
          },
          "metaDescription": {
            "type": "string"
          },
          "attributeNames": {
            "type": "array",
            "items": {}
          }
        }
      },
      "ConcreteProductsRestCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConcreteProductsRestCollectionResponseData"
            }
          }
        }
      },
      "ConcreteProductsRestCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ConcreteProductsRestAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "ConcreteProductsRestIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestConcreteProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductLabelsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductReviewsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOptionsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestBundledProductsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/ConcreteProductsRestResponseData"
            },
            {
              "$ref": "#/components/schemas/AbstractProductsRestCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestAbstractProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestCategoryNodesResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductTaxSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOffersCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferAvailabilitiesCollectionResponseData"
            }
          ]
        },
        "type": "array"
      },
      "ConcreteProductsRestRelationships": {
        "properties": {
          "concrete-product-image-sets": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "concrete-product-availabilities": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "concrete-product-prices": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "product-labels": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "product-reviews": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "product-options": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "bundled-products": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "abstract-products": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "product-offers": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "ConcreteProductsRestResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ConcreteProductsRestResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/ConcreteProductsRestIncluded"
          }
        }
      },
      "ConcreteProductsRestResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ConcreteProductsRestAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/ConcreteProductsRestRelationships"
          }
        }
      },
      "ContentProductAbstractListsAttributes": {},
      "ContentProductAbstractListsIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/AbstractProductsRestCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/ConcreteProductsRestResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestConcreteProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductLabelsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductReviewsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOptionsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestBundledProductsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOffersCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferAvailabilitiesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestAbstractProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestCategoryNodesResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductTaxSetsCollectionResponseData"
            }
          ]
        },
        "type": "array"
      },
      "ContentProductAbstractListsRelationships": {
        "properties": {
          "abstract-products": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "ContentProductAbstractListsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContentProductAbstractListsResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/ContentProductAbstractListsIncluded"
          }
        }
      },
      "ContentProductAbstractListsResponseData": {
        "properties": {
          "relationships": {
            "$ref": "#/components/schemas/ContentProductAbstractListsRelationships"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/ContentProductAbstractListsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "Endpoint": {
        "properties": {
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        }
      },
      "HealthCheckServiceResponse": {
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PaymentMethodAppConfiguration": {
        "properties": {
          "checkoutConfiguration": {
            "$ref": "#/components/schemas/CheckoutConfiguration"
          },
          "baseUrl": {
            "type": "string"
          },
          "endpoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Endpoint"
            }
          }
        }
      },
      "PreOrderPaymentResponse": {
        "properties": {
          "isSuccessful": {
            "type": "boolean"
          },
          "error": {
            "type": "string"
          },
          "preOrderPaymentData": {
            "type": "array",
            "items": {}
          }
        }
      },
      "PreOrderPaymentResponseTransfer": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PreOrderPaymentResponseTransfer"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/PreOrderPaymentResponse"
          }
        }
      },
      "QuoteTransfer": {},
      "RestAbstractProductAvailabilityAttributes": {
        "properties": {
          "quantity": {
            "type": "number"
          },
          "availability": {
            "type": "boolean"
          }
        }
      },
      "RestAbstractProductAvailabilityCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestAbstractProductAvailabilityCollectionResponseData"
            }
          }
        }
      },
      "RestAbstractProductAvailabilityCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestAbstractProductAvailabilityAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestAccessTokensRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestAccessTokensRequestData"
          }
        }
      },
      "RestAccessTokensRequestAttributes": {
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "RestAccessTokensRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestAccessTokensRequestAttributes"
          }
        }
      },
      "RestAddress": {
        "properties": {
          "id": {
            "type": "string"
          },
          "salutation": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "iso2Code": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "isDefaultBilling": {
            "type": "boolean"
          },
          "isDefaultShipping": {
            "type": "boolean"
          }
        }
      },
      "RestAddressAttributes": {
        "properties": {
          "salutation": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "iso2Code": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "isDefaultShipping": {
            "type": "boolean"
          },
          "isDefaultBilling": {
            "type": "boolean"
          }
        }
      },
      "RestAddressCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestAddressCollectionResponseData"
            }
          }
        }
      },
      "RestAddressCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestAddressAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestAddressRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestAddressRequestData"
          }
        }
      },
      "RestAddressRequestAttributes": {
        "properties": {
          "salutation": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "iso2Code": {
            "type": "string"
          },
          "isDefaultShipping": {
            "type": "boolean"
          },
          "isDefaultBilling": {
            "type": "boolean"
          }
        },
        "required": [
          "salutation",
          "firstName",
          "lastName",
          "address1",
          "address2",
          "zipCode",
          "city",
          "iso2Code"
        ]
      },
      "RestAddressRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestAddressRequestAttributes"
          }
        }
      },
      "RestAddressResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestAddressResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestAddressResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestAddressAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestAddressTransfer": {
        "properties": {
          "id": {
            "type": "string"
          },
          "salutation": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "iso2Code": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "isDefaultBilling": {
            "type": "boolean"
          },
          "isDefaultShipping": {
            "type": "boolean"
          }
        },
        "required": [
          "salutation",
          "firstName",
          "lastName",
          "address1",
          "address2",
          "address3",
          "zipCode",
          "city",
          "iso2Code",
          "company",
          "phone"
        ]
      },
      "RestAgentAccessTokensAttributes": {
        "properties": {
          "tokenType": {
            "type": "string"
          },
          "expiresIn": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "RestAgentAccessTokensRequestRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestAgentAccessTokensRequestRequestData"
          }
        }
      },
      "RestAgentAccessTokensRequestRequestAttributes": {
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "RestAgentAccessTokensRequestRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestAgentAccessTokensRequestRequestAttributes"
          }
        }
      },
      "RestAgentAccessTokensResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestAgentAccessTokensResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestAgentAccessTokensResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/RestAgentAccessTokensAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestAgentCustomerImpersonationAccessTokensAttributes": {
        "properties": {
          "tokenType": {
            "type": "string"
          },
          "expiresIn": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "RestAgentCustomerImpersonationAccessTokensRequestRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestAgentCustomerImpersonationAccessTokensRequestRequestData"
          }
        }
      },
      "RestAgentCustomerImpersonationAccessTokensRequestRequestAttributes": {
        "properties": {
          "customerReference": {
            "type": "string"
          }
        },
        "required": [
          "customerReference"
        ]
      },
      "RestAgentCustomerImpersonationAccessTokensRequestRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestAgentCustomerImpersonationAccessTokensRequestRequestAttributes"
          }
        }
      },
      "RestAgentCustomerImpersonationAccessTokensResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestAgentCustomerImpersonationAccessTokensResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestAgentCustomerImpersonationAccessTokensResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/RestAgentCustomerImpersonationAccessTokensAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestAgentCustomerSearchAttributes": {
        "properties": {
          "customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestAgentCustomerSearchCustomersAttributes"
            }
          }
        }
      },
      "RestAgentCustomerSearchCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestAgentCustomerSearchCollectionResponseData"
            }
          }
        }
      },
      "RestAgentCustomerSearchCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/RestAgentCustomerSearchAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestAgentCustomerSearchCustomersAttributes": {
        "properties": {
          "customerReference": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "RestAvailabilityNotificationsAttributes": {
        "properties": {
          "localeName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          }
        }
      },
      "RestAvailabilityNotificationsCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestAvailabilityNotificationsCollectionResponseData"
            }
          }
        }
      },
      "RestAvailabilityNotificationsCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestAvailabilityNotificationsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestAvailabilityNotificationsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestAvailabilityNotificationsResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestAvailabilityNotificationsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestAvailabilityNotificationsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestBundledProductsAttributes": {
        "properties": {
          "sku": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          }
        }
      },
      "RestBundledProductsCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestBundledProductsCollectionResponseData"
            }
          },
          "included": {
            "$ref": "#/components/schemas/RestBundledProductsIncluded"
          }
        }
      },
      "RestBundledProductsCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestBundledProductsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestBundledProductsRelationships"
          }
        }
      },
      "RestBundledProductsIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/ConcreteProductsRestResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestConcreteProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductLabelsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductReviewsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOptionsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestBundledProductsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/AbstractProductsRestCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestAbstractProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestCategoryNodesResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductTaxSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOffersCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferAvailabilitiesCollectionResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestBundledProductsRelationships": {
        "properties": {
          "concrete-products": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestBundledProductsResponseData": {
        "properties": {
          "relationships": {
            "$ref": "#/components/schemas/RestBundledProductsRelationships"
          }
        }
      },
      "RestCalculatedDiscount": {
        "properties": {
          "unitAmount": {
            "type": "integer"
          },
          "sumAmount": {
            "type": "integer"
          },
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "voucherCode": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          }
        }
      },
      "RestCartCodeRequestAttributes": {
        "properties": {
          "code": {
            "type": "string"
          }
        }
      },
      "RestCartCodeRequestRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCartCodeRequestRequestData"
          }
        }
      },
      "RestCartCodeRequestRequestAttributes": {
        "properties": {
          "code": {
            "type": "string"
          }
        }
      },
      "RestCartCodeRequestRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCartCodeRequestRequestAttributes"
          }
        }
      },
      "RestCartCodeRequestResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCartCodeRequestResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestCartCodeRequestResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCartCodeRequestAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestCartItemCalculations": {
        "properties": {
          "unitPrice": {
            "type": "integer"
          },
          "sumPrice": {
            "type": "integer"
          },
          "taxRate": {
            "type": "integer"
          },
          "unitNetPrice": {
            "type": "integer"
          },
          "sumNetPrice": {
            "type": "integer"
          },
          "unitGrossPrice": {
            "type": "integer"
          },
          "sumGrossPrice": {
            "type": "integer"
          },
          "unitTaxAmountFullAggregation": {
            "type": "integer"
          },
          "sumTaxAmountFullAggregation": {
            "type": "integer"
          },
          "sumSubtotalAggregation": {
            "type": "integer"
          },
          "unitSubtotalAggregation": {
            "type": "integer"
          },
          "unitProductOptionPriceAggregation": {
            "type": "integer"
          },
          "sumProductOptionPriceAggregation": {
            "type": "integer"
          },
          "unitDiscountAmountAggregation": {
            "type": "integer"
          },
          "sumDiscountAmountAggregation": {
            "type": "integer"
          },
          "unitDiscountAmountFullAggregation": {
            "type": "integer"
          },
          "sumDiscountAmountFullAggregation": {
            "type": "integer"
          },
          "unitPriceToPayAggregation": {
            "type": "integer"
          },
          "sumPriceToPayAggregation": {
            "type": "integer"
          }
        }
      },
      "RestCartItemProductConfigurationInstanceAttributes": {
        "properties": {
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductConfigurationPriceAttributes"
            }
          },
          "volumePrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductPriceVolumesAttributes"
            }
          },
          "displayData": {
            "type": "string"
          },
          "configuration": {
            "type": "string"
          },
          "configuratorKey": {
            "type": "string"
          },
          "isComplete": {
            "type": "boolean"
          },
          "availableQuantity": {
            "type": "integer"
          }
        }
      },
      "RestCartItemProductConfigurationInstanceRequestAttributes": {},
      "RestCartItemsProductOptionTransfer": {},
      "RestCartItemsRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCartItemsRequestData"
          }
        }
      },
      "RestCartItemsRequestAttributes": {
        "properties": {
          "sku": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "idPromotionalItem": {
            "type": "string"
          },
          "productOfferReference": {
            "type": "string"
          },
          "merchantReference": {
            "type": "string"
          },
          "productConfigurationInstance": {
            "$ref": "#/components/schemas/RestCartItemProductConfigurationInstanceRequestAttributes"
          },
          "productOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCartItemsProductOptionTransfer"
            }
          }
        },
        "required": [
          "sku",
          "quantity"
        ]
      },
      "RestCartItemsRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCartItemsRequestAttributes"
          }
        }
      },
      "RestCartReorderRequestRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCartReorderRequestRequestData"
          }
        }
      },
      "RestCartReorderRequestRequestAttributes": {
        "properties": {
          "orderReference": {
            "type": "string"
          },
          "reorderStrategy": {
            "type": "string"
          },
          "isAmendment": {
            "type": "boolean"
          }
        },
        "required": [
          "orderReference",
          "reorderStrategy"
        ]
      },
      "RestCartReorderRequestRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCartReorderRequestRequestAttributes"
          }
        }
      },
      "RestCartsAttributes": {
        "properties": {
          "priceMode": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "store": {
            "type": "string"
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCartsDiscounts"
            }
          },
          "totals": {
            "$ref": "#/components/schemas/RestCartsTotals"
          },
          "amendmentOrderReference": {
            "type": "string"
          },
          "thresholds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCartsThresholds"
            }
          }
        }
      },
      "RestCartsCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCartsCollectionResponseData"
            }
          },
          "included": {
            "$ref": "#/components/schemas/RestCartsIncluded"
          }
        }
      },
      "RestCartsCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCartsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestCartsRelationships"
          }
        }
      },
      "RestCartsDiscounts": {
        "properties": {
          "displayName": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "RestCartsIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestDiscountsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestItemsResponseData"
            },
            {
              "$ref": "#/components/schemas/ConcreteProductsRestResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestConcreteProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductLabelsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductReviewsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOptionsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestBundledProductsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/AbstractProductsRestCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestAbstractProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestCategoryNodesResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductTaxSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOffersCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferAvailabilitiesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestPromotionalItemsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestGiftCardsResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestCartsRelationships": {
        "properties": {
          "vouchers": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "cart-rules": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "items": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "promotional-items": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "gift-cards": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "bundle-items": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "concrete-products": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "merchants": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "guest-cart-items": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestCartsRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCartsRequestData"
          }
        }
      },
      "RestCartsRequestAttributes": {
        "properties": {
          "priceMode": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "store": {
            "type": "string"
          }
        },
        "required": [
          "priceMode",
          "currency",
          "store"
        ]
      },
      "RestCartsRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCartsRequestAttributes"
          }
        }
      },
      "RestCartsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCartsResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/RestCartsIncluded"
          }
        }
      },
      "RestCartsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCartsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestCartsRelationships"
          }
        }
      },
      "RestCartsThresholds": {
        "properties": {
          "type": {
            "type": "string"
          },
          "threshold": {
            "type": "integer"
          },
          "fee": {
            "type": "integer"
          },
          "deltaWithSubtotal": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "RestCartsTotals": {
        "properties": {
          "expenseTotal": {
            "type": "integer"
          },
          "discountTotal": {
            "type": "integer"
          },
          "taxTotal": {
            "type": "integer"
          },
          "subtotal": {
            "type": "integer"
          },
          "grandTotal": {
            "type": "integer"
          },
          "priceToPay": {
            "type": "integer"
          },
          "shipmentTotal": {
            "type": "integer"
          }
        }
      },
      "RestCatalogSearchAbstractProducts": {
        "properties": {
          "abstractSku": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCatalogSearchProductImage"
            }
          },
          "price": {
            "type": "integer"
          },
          "abstractName": {
            "type": "string"
          },
          "prices": {
            "type": "array",
            "items": {}
          }
        }
      },
      "RestCatalogSearchAttributes": {
        "properties": {
          "sort": {
            "$ref": "#/components/schemas/RestCatalogSearchSort"
          },
          "pagination": {
            "$ref": "#/components/schemas/RestCatalogSearchPagination"
          },
          "abstractProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCatalogSearchAbstractProducts"
            }
          },
          "valueFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestFacetSearchResult"
            }
          },
          "rangeFacets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestRangeSearchResult"
            }
          },
          "categoryTreeFilter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCategoryNodeSearchResultAttributes"
            }
          },
          "spellingSuggestion": {
            "type": "string"
          }
        }
      },
      "RestCatalogSearchCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCatalogSearchCollectionResponseData"
            }
          },
          "included": {
            "$ref": "#/components/schemas/RestCatalogSearchIncluded"
          }
        }
      },
      "RestCatalogSearchCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCatalogSearchAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestCatalogSearchRelationships"
          }
        }
      },
      "RestCatalogSearchIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/AbstractProductsRestCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/ConcreteProductsRestResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestConcreteProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductLabelsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductReviewsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOptionsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestBundledProductsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOffersCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferAvailabilitiesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestAbstractProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestCategoryNodesResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductTaxSetsCollectionResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestCatalogSearchPagination": {
        "properties": {
          "numFound": {
            "type": "integer"
          },
          "currentPage": {
            "type": "integer"
          },
          "maxPage": {
            "type": "integer"
          },
          "currentItemsPerPage": {
            "type": "integer"
          },
          "config": {
            "$ref": "#/components/schemas/RestCatalogSearchPaginationConfig"
          }
        }
      },
      "RestCatalogSearchPaginationConfig": {
        "properties": {
          "parameterName": {
            "type": "string"
          },
          "itemsPerPageParameterName": {
            "type": "string"
          },
          "defaultItemsPerPage": {
            "type": "integer"
          },
          "validItemsPerPageOptions": {
            "type": "array",
            "items": {}
          }
        }
      },
      "RestCatalogSearchProductImage": {
        "properties": {
          "externalUrlSmall": {
            "type": "string"
          },
          "externalUrlLarge": {
            "type": "string"
          }
        }
      },
      "RestCatalogSearchRelationships": {
        "properties": {
          "abstract-products": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestCatalogSearchSort": {
        "properties": {
          "sortParamNames": {
            "type": "array",
            "items": {}
          },
          "sortParamLocalizedNames": {
            "type": "array",
            "items": {}
          },
          "currentSortParam": {
            "type": "string"
          },
          "currentSortOrder": {
            "type": "string"
          }
        }
      },
      "RestCatalogSearchSuggestionAbstractProducts": {
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCatalogSearchSuggestionProductImage"
            }
          },
          "price": {
            "type": "integer"
          },
          "abstractName": {
            "type": "string"
          },
          "abstractSku": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "RestCatalogSearchSuggestionCategories": {
        "properties": {
          "idCategory": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "RestCatalogSearchSuggestionCmsPages": {
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "RestCatalogSearchSuggestionProductImage": {
        "properties": {
          "externalUrlSmall": {
            "type": "string"
          },
          "externalUrlLarge": {
            "type": "string"
          }
        }
      },
      "RestCatalogSearchSuggestionsAttributes": {
        "properties": {
          "completion": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "abstractProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCatalogSearchSuggestionAbstractProducts"
            }
          },
          "categories": {
            "type": "array",
            "items": {}
          },
          "cmsPages": {
            "type": "array",
            "items": {}
          },
          "categoryCollection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCatalogSearchSuggestionCategories"
            }
          },
          "cmsPageCollection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCatalogSearchSuggestionCmsPages"
            }
          }
        }
      },
      "RestCatalogSearchSuggestionsCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCatalogSearchSuggestionsCollectionResponseData"
            }
          },
          "included": {
            "$ref": "#/components/schemas/RestCatalogSearchSuggestionsIncluded"
          }
        }
      },
      "RestCatalogSearchSuggestionsCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCatalogSearchSuggestionsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestCatalogSearchSuggestionsRelationships"
          }
        }
      },
      "RestCatalogSearchSuggestionsIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/AbstractProductsRestCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/ConcreteProductsRestResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestConcreteProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductLabelsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductReviewsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOptionsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestBundledProductsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOffersCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferAvailabilitiesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestAbstractProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestCategoryNodesResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductTaxSetsCollectionResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestCatalogSearchSuggestionsRelationships": {
        "properties": {
          "abstract-products": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestCategoryNodeSearchResultAttributes": {
        "properties": {
          "nodeId": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "docCount": {
            "type": "integer"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCategoryNodeSearchResultAttributes"
            }
          }
        }
      },
      "RestCategoryNodesAttributes": {
        "properties": {
          "nodeId": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "metaTitle": {
            "type": "string"
          },
          "metaKeywords": {
            "type": "string"
          },
          "metaDescription": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCategoryNodesAttributes"
            }
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCategoryNodesAttributes"
            }
          },
          "order": {
            "type": "integer"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "RestCategoryNodesResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCategoryNodesResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestCategoryNodesResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCategoryNodesAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestCategoryTreesAttributes": {
        "properties": {
          "nodeId": {
            "type": "integer"
          },
          "order": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCategoryTreesAttributes"
            }
          },
          "url": {
            "type": "string"
          }
        }
      },
      "RestCategoryTreesCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCategoryTreesCollectionResponseData"
            }
          }
        }
      },
      "RestCategoryTreesCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCategoryTreesAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestCheckoutDataResponseAttributes": {
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestAddress"
            }
          },
          "paymentProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestPaymentProvider"
            }
          },
          "shipmentMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestShipmentMethod"
            }
          },
          "selectedShipmentMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestShipmentMethod"
            }
          },
          "selectedPaymentMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestPaymentMethod"
            }
          },
          "selectedServicePoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestServicePoint"
            }
          },
          "selectedShipmentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestShipmentType"
            }
          }
        }
      },
      "RestCheckoutDataResponseIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestShipmentsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestShipmentTypesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestServiceTypesResponseData"
            },
            {
              "$ref": "#/components/schemas/RestPaymentMethodsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestAddressCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestCartsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestDiscountsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestDiscountsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestItemsResponseData"
            },
            {
              "$ref": "#/components/schemas/ConcreteProductsRestResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestConcreteProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductLabelsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductReviewsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOptionsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestBundledProductsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/AbstractProductsRestCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestAbstractProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestCategoryNodesResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductTaxSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOffersCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferAvailabilitiesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestPromotionalItemsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestGiftCardsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestItemsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestCartsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestItemsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestServicePointsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestServicePointAddressesResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestCheckoutDataResponseRelationships": {
        "properties": {
          "shipments": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "payment-methods": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "addresses": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "carts": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "guest-carts": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "service-points": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestCheckoutDataResponseResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCheckoutDataResponseResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/RestCheckoutDataResponseIncluded"
          }
        }
      },
      "RestCheckoutDataResponseResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCheckoutDataResponseAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestCheckoutDataResponseRelationships"
          }
        }
      },
      "RestCheckoutRequestRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCheckoutRequestRequestData"
          }
        }
      },
      "RestCheckoutRequestRequestAttributes": {
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/RestCustomerTransfer"
          },
          "idCart": {
            "type": "string"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/RestAddressTransfer"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/RestAddressTransfer"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestPaymentTransfer"
            }
          },
          "shipment": {
            "$ref": "#/components/schemas/RestShipmentTransfer"
          },
          "preOrderPaymentData": {
            "type": "array",
            "items": {}
          },
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestShipmentsTransfer"
            }
          },
          "servicePoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestServicePointTransfer"
            }
          }
        },
        "required": [
          "idCart"
        ]
      },
      "RestCheckoutRequestRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCheckoutRequestRequestAttributes"
          }
        }
      },
      "RestCheckoutResponseAttributes": {
        "properties": {
          "orderReference": {
            "type": "string"
          },
          "redirectUrl": {
            "type": "string"
          },
          "isExternalRedirect": {
            "type": "boolean"
          }
        }
      },
      "RestCheckoutResponseIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestOrdersCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestOrderShipmentsResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestCheckoutResponseRelationships": {
        "properties": {
          "orders": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestCheckoutResponseResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCheckoutResponseResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/RestCheckoutResponseIncluded"
          }
        }
      },
      "RestCheckoutResponseResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCheckoutResponseAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestCheckoutResponseRelationships"
          }
        }
      },
      "RestCmsPagesAttributes": {
        "properties": {
          "pageKey": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "validTo": {
            "type": "string"
          },
          "isSearchable": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "RestCmsPagesCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCmsPagesCollectionResponseData"
            }
          },
          "included": {
            "$ref": "#/components/schemas/RestCmsPagesIncluded"
          }
        }
      },
      "RestCmsPagesCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCmsPagesAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestCmsPagesRelationships"
          }
        }
      },
      "RestCmsPagesIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestContentBannerResponseData"
            },
            {
              "$ref": "#/components/schemas/ContentProductAbstractListsResponseData"
            },
            {
              "$ref": "#/components/schemas/AbstractProductsRestCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/ConcreteProductsRestResponseData"
            },
            {
              "$ref": "#/components/schemas/RestConcreteProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductLabelsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductReviewsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOptionsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestBundledProductsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOffersCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferAvailabilitiesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestAbstractProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestCategoryNodesResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductTaxSetsCollectionResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestCmsPagesRelationships": {
        "properties": {
          "content-banners": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "content-product-abstract-lists": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestCmsPagesResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCmsPagesResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/RestCmsPagesIncluded"
          }
        }
      },
      "RestCmsPagesResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCmsPagesAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestCmsPagesRelationships"
          }
        }
      },
      "RestConcreteProductAvailabilityAttributes": {
        "properties": {
          "isNeverOutOfStock": {
            "type": "boolean"
          },
          "quantity": {
            "type": "number"
          },
          "availability": {
            "type": "boolean"
          }
        }
      },
      "RestConcreteProductAvailabilityCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestConcreteProductAvailabilityCollectionResponseData"
            }
          }
        }
      },
      "RestConcreteProductAvailabilityCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestConcreteProductAvailabilityAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestConfigurableBundleImagesAttributes": {
        "properties": {
          "externalUrlLarge": {
            "type": "string"
          },
          "externalUrlSmall": {
            "type": "string"
          }
        }
      },
      "RestConfigurableBundleTemplate": {
        "properties": {
          "uuid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "RestConfigurableBundleTemplateImageSetsAttributes": {
        "properties": {
          "name": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestConfigurableBundleImagesAttributes"
            }
          }
        }
      },
      "RestConfigurableBundleTemplateImageSetsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestConfigurableBundleTemplateImageSetsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestConfigurableBundleTemplateSlot": {
        "properties": {
          "uuid": {
            "type": "string"
          }
        }
      },
      "RestConfigurableBundleTemplateSlotsAttributes": {
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "RestConfigurableBundleTemplateSlotsRelationships": {
        "properties": {
          "concrete-products": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestConfigurableBundleTemplateSlotsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestConfigurableBundleTemplateSlotsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestConfigurableBundleTemplateSlotsRelationships"
          }
        }
      },
      "RestConfigurableBundleTemplatesAttributes": {
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "RestConfigurableBundleTemplatesCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestConfigurableBundleTemplatesCollectionResponseData"
            }
          },
          "included": {
            "$ref": "#/components/schemas/RestConfigurableBundleTemplatesIncluded"
          }
        }
      },
      "RestConfigurableBundleTemplatesCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestConfigurableBundleTemplatesAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestConfigurableBundleTemplatesRelationships"
          }
        }
      },
      "RestConfigurableBundleTemplatesIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestConfigurableBundleTemplateSlotsResponseData"
            },
            {
              "$ref": "#/components/schemas/ConcreteProductsRestResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestConcreteProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductLabelsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductReviewsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOptionsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestBundledProductsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/AbstractProductsRestCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestAbstractProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestCategoryNodesResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductTaxSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOffersCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferAvailabilitiesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestConfigurableBundleTemplateImageSetsResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestConfigurableBundleTemplatesRelationships": {
        "properties": {
          "configurable-bundle-template-slots": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "configurable-bundle-template-image-sets": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestConfigurableBundleTemplatesResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestConfigurableBundleTemplatesResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/RestConfigurableBundleTemplatesIncluded"
          }
        }
      },
      "RestConfigurableBundleTemplatesResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestConfigurableBundleTemplatesAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestConfigurableBundleTemplatesRelationships"
          }
        }
      },
      "RestConfiguredBundle": {
        "properties": {
          "template": {
            "$ref": "#/components/schemas/RestConfigurableBundleTemplate"
          },
          "quantity": {
            "type": "integer"
          },
          "groupKey": {
            "type": "string"
          }
        }
      },
      "RestConfiguredBundleItem": {
        "properties": {
          "slot": {
            "$ref": "#/components/schemas/RestConfigurableBundleTemplateSlot"
          },
          "quantityPerSlot": {
            "type": "integer"
          }
        }
      },
      "RestConfiguredBundleItemsRequestAttributes": {
        "properties": {
          "sku": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "slotUuid": {
            "type": "string"
          }
        },
        "required": [
          "sku",
          "quantity",
          "slotUuid"
        ]
      },
      "RestConfiguredBundlesRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestConfiguredBundlesRequestData"
          }
        }
      },
      "RestConfiguredBundlesRequestAttributes": {
        "properties": {
          "quantity": {
            "type": "integer"
          },
          "templateUuid": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestConfiguredBundleItemsRequestAttributes"
            }
          }
        },
        "required": [
          "quantity",
          "templateUuid",
          "items"
        ]
      },
      "RestConfiguredBundlesRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestConfiguredBundlesRequestAttributes"
          }
        }
      },
      "RestContentBannerAttributes": {
        "properties": {
          "title": {
            "type": "string"
          },
          "subtitle": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "clickUrl": {
            "type": "string"
          },
          "altText": {
            "type": "string"
          }
        }
      },
      "RestContentBannerResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestContentBannerResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestContentBannerResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestContentBannerAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestCurrency": {
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          }
        }
      },
      "RestCustomerAccessAttributes": {
        "properties": {
          "resourceTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RestCustomerAccessCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCustomerAccessCollectionResponseData"
            }
          }
        }
      },
      "RestCustomerAccessCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCustomerAccessAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestCustomerConfirmationRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCustomerConfirmationRequestData"
          }
        }
      },
      "RestCustomerConfirmationRequestAttributes": {
        "properties": {
          "registrationKey": {
            "type": "string"
          }
        },
        "required": [
          "registrationKey"
        ]
      },
      "RestCustomerConfirmationRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCustomerConfirmationRequestAttributes"
          }
        }
      },
      "RestCustomerForgottenPasswordRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCustomerForgottenPasswordRequestData"
          }
        }
      },
      "RestCustomerForgottenPasswordRequestAttributes": {
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "RestCustomerForgottenPasswordRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCustomerForgottenPasswordRequestAttributes"
          }
        }
      },
      "RestCustomerPasswordRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCustomerPasswordRequestData"
          }
        }
      },
      "RestCustomerPasswordRequestAttributes": {
        "properties": {
          "password": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "newPassword",
          "confirmPassword"
        ]
      },
      "RestCustomerPasswordRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCustomerPasswordRequestAttributes"
          }
        }
      },
      "RestCustomerResponseAttributes": {
        "properties": {
          "salutation": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/RestAddressAttributes"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/RestAddressAttributes"
          }
        }
      },
      "RestCustomerRestorePasswordRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCustomerRestorePasswordRequestData"
          }
        }
      },
      "RestCustomerRestorePasswordRequestAttributes": {
        "properties": {
          "restorePasswordKey": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          }
        },
        "required": [
          "restorePasswordKey",
          "password",
          "confirmPassword"
        ]
      },
      "RestCustomerRestorePasswordRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCustomerRestorePasswordRequestAttributes"
          }
        }
      },
      "RestCustomerTransfer": {
        "properties": {
          "email": {
            "type": "string"
          },
          "salutation": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "RestCustomersAttributes": {
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "salutation": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          },
          "acceptedTerms": {
            "type": "boolean"
          }
        }
      },
      "RestCustomersCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCustomersCollectionResponseData"
            }
          },
          "included": {
            "$ref": "#/components/schemas/RestCustomersIncluded"
          }
        }
      },
      "RestCustomersCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCustomersAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestCustomersRelationships"
          }
        }
      },
      "RestCustomersIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestAddressCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestWishlistsCollectionResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestCustomersRelationships": {
        "properties": {
          "addresses": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "wishlists": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestCustomersRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCustomersRequestData"
          }
        }
      },
      "RestCustomersRequestAttributes": {
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "salutation": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          },
          "acceptedTerms": {
            "type": "boolean"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "gender",
          "salutation",
          "email",
          "password",
          "confirmPassword",
          "acceptedTerms"
        ]
      },
      "RestCustomersRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCustomersRequestAttributes"
          }
        }
      },
      "RestCustomersResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestCustomersResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/RestCustomersIncluded"
          }
        }
      },
      "RestCustomersResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestCustomersAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestCustomersRelationships"
          }
        }
      },
      "RestDateSchedule": {
        "properties": {
          "date": {
            "type": "string"
          },
          "timeFrom": {
            "type": "string"
          },
          "timeTo": {
            "type": "string"
          },
          "noteGlossaryKey": {
            "type": "string"
          }
        }
      },
      "RestDiscountsAttributes": {
        "properties": {
          "amount": {
            "type": "integer"
          },
          "code": {
            "type": "string"
          },
          "discountType": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "isExclusive": {
            "type": "boolean"
          },
          "expirationDateTime": {
            "type": "string"
          },
          "discountPromotionAbstractSku": {
            "type": "string"
          },
          "discountPromotionQuantity": {
            "type": "integer"
          }
        }
      },
      "RestDiscountsRequestAttributes": {
        "properties": {
          "code": {
            "type": "string"
          }
        }
      },
      "RestDiscountsRequestRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestDiscountsRequestRequestData"
          }
        }
      },
      "RestDiscountsRequestRequestAttributes": {
        "properties": {
          "code": {
            "type": "string"
          }
        }
      },
      "RestDiscountsRequestRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestDiscountsRequestRequestAttributes"
          }
        }
      },
      "RestDiscountsRequestResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestDiscountsRequestResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestDiscountsRequestResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestDiscountsRequestAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestDiscountsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestDiscountsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestErrorMessage": {
        "properties": {
          "code": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          }
        }
      },
      "RestFacetConfig": {
        "properties": {
          "parameterName": {
            "type": "string"
          },
          "isMultiValued": {
            "type": "boolean"
          }
        }
      },
      "RestFacetSearchResult": {
        "properties": {
          "name": {
            "type": "string"
          },
          "localizedName": {
            "type": "string"
          },
          "docCount": {
            "type": "integer"
          },
          "values": {
            "type": "array",
            "items": {}
          },
          "activeValue": {
            "type": "string"
          },
          "config": {
            "$ref": "#/components/schemas/RestFacetConfig"
          }
        }
      },
      "RestGiftCardsAttributes": {
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "integer"
          },
          "currencyIsoCode": {
            "type": "string"
          },
          "actualValue": {
            "type": "integer"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "RestGiftCardsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestGiftCardsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestHealthCheckResponseAttributes": {
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "healthCheckServiceResponses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthCheckServiceResponse"
            }
          }
        }
      },
      "RestHealthCheckResponseResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestHealthCheckResponseResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestHealthCheckResponseResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestHealthCheckResponseAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestImagesAttributes": {
        "properties": {
          "externalUrlLarge": {
            "type": "string"
          },
          "externalUrlSmall": {
            "type": "string"
          }
        }
      },
      "RestItemProductOptions": {
        "properties": {
          "optionGroupName": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "optionName": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          }
        }
      },
      "RestItemsAttributes": {
        "properties": {
          "sku": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "groupKey": {
            "type": "string"
          },
          "abstractSku": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          },
          "calculations": {
            "$ref": "#/components/schemas/RestCartItemCalculations"
          },
          "configuredBundle": {
            "$ref": "#/components/schemas/RestConfiguredBundle"
          },
          "configuredBundleItem": {
            "$ref": "#/components/schemas/RestConfiguredBundleItem"
          },
          "productOfferReference": {
            "type": "string"
          },
          "merchantReference": {
            "type": "string"
          },
          "productConfigurationInstance": {
            "$ref": "#/components/schemas/RestCartItemProductConfigurationInstanceAttributes"
          },
          "selectedProductOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestItemProductOptions"
            }
          }
        }
      },
      "RestItemsRelationships": {
        "properties": {
          "concrete-products": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "merchants": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "bundled-items": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestItemsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestItemsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestItemsRelationships"
          }
        }
      },
      "RestLegalInformation": {
        "properties": {
          "terms": {
            "type": "string"
          },
          "cancellationPolicy": {
            "type": "string"
          },
          "imprint": {
            "type": "string"
          },
          "dataPrivacy": {
            "type": "string"
          }
        }
      },
      "RestLinks": {
        "properties": {
          "self": {
            "type": "string"
          }
        }
      },
      "RestLocalizedProductManagementAttributeKeyAttributes": {
        "properties": {
          "localeName": {
            "type": "string"
          },
          "translation": {
            "type": "string"
          }
        }
      },
      "RestMerchantAddress": {
        "properties": {
          "countryName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          }
        }
      },
      "RestMerchantAddressesAttributes": {
        "properties": {
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestMerchantAddress"
            }
          }
        }
      },
      "RestMerchantAddressesCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            }
          }
        }
      },
      "RestMerchantAddressesCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestMerchantAddressesAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestMerchantCategoryAttributes": {
        "properties": {
          "categoryKey": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "RestMerchantOpeningHoursAttributes": {
        "properties": {
          "weekdaySchedule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestWeekdaySchedule"
            }
          },
          "dateSchedule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestDateSchedule"
            }
          }
        }
      },
      "RestMerchantOpeningHoursCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            }
          }
        }
      },
      "RestMerchantOpeningHoursCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestMerchantOpeningHoursAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestMerchantsAttributes": {
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestMerchantCategoryAttributes"
            }
          },
          "merchantName": {
            "type": "string"
          },
          "merchantUrl": {
            "type": "string"
          },
          "contactPersonRole": {
            "type": "string"
          },
          "contactPersonTitle": {
            "type": "string"
          },
          "contactPersonFirstName": {
            "type": "string"
          },
          "contactPersonLastName": {
            "type": "string"
          },
          "contactPersonPhone": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "publicEmail": {
            "type": "string"
          },
          "publicPhone": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "bannerUrl": {
            "type": "string"
          },
          "deliveryTime": {
            "type": "string"
          },
          "faxNumber": {
            "type": "string"
          },
          "legalInformation": {
            "$ref": "#/components/schemas/RestLegalInformation"
          }
        }
      },
      "RestMerchantsCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestMerchantsCollectionResponseData"
            }
          },
          "included": {
            "$ref": "#/components/schemas/RestMerchantsIncluded"
          }
        }
      },
      "RestMerchantsCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestMerchantsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestMerchantsRelationships"
          }
        }
      },
      "RestMerchantsIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestMerchantsRelationships": {
        "properties": {
          "merchant-addresses": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "merchant-opening-hours": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestMerchantsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestMerchantsResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/RestMerchantsIncluded"
          }
        }
      },
      "RestMerchantsResponseData": {
        "properties": {
          "relationships": {
            "$ref": "#/components/schemas/RestMerchantsRelationships"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestMerchantsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestMultiFactorAuthAttributes": {
        "properties": {
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "RestMultiFactorAuthCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestMultiFactorAuthCollectionResponseData"
            }
          }
        }
      },
      "RestMultiFactorAuthCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestMultiFactorAuthAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestMultiFactorAuthResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestMultiFactorAuthResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestMultiFactorAuthResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestMultiFactorAuthAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestNavigationAttributes": {
        "properties": {
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestNavigationNode"
            }
          },
          "name": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "RestNavigationIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestCategoryNodesResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestNavigationNode": {
        "properties": {
          "resourceId": {
            "type": "integer"
          },
          "nodeType": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestNavigationNode"
            }
          },
          "isActive": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "cssClass": {
            "type": "string"
          },
          "validFrom": {
            "type": "string"
          },
          "validTo": {
            "type": "string"
          }
        }
      },
      "RestNavigationRelationships": {
        "properties": {
          "category-nodes": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestNavigationResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestNavigationResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/RestNavigationIncluded"
          }
        }
      },
      "RestNavigationResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestNavigationAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestNavigationRelationships"
          }
        }
      },
      "RestOrderAddress": {
        "properties": {
          "salutation": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "poBox": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "cellPhone": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "iso2Code": {
            "type": "string"
          }
        }
      },
      "RestOrderDetailsAttributes": {
        "properties": {
          "merchantReferences": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string"
          },
          "totals": {
            "$ref": "#/components/schemas/RestOrderTotalsAttributes"
          },
          "currencyIsoCode": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestOrderItemsAttributes"
            }
          },
          "expenses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestOrderExpensesAttributes"
            }
          },
          "billingAddress": {
            "$ref": "#/components/schemas/RestOrderAddress"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/RestOrderAddress"
          },
          "priceMode": {
            "type": "string"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestOrderPayment"
            }
          },
          "shipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestOrderShipment"
            }
          },
          "calculatedDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCalculatedDiscount"
            }
          },
          "bundleItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestOrderItemsAttributes"
            }
          }
        }
      },
      "RestOrderDetailsIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestOrderShipmentsResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestOrderDetailsRelationships": {
        "properties": {
          "order-shipments": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "order-amendments": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestOrderDetailsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestOrderDetailsResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/RestOrderDetailsIncluded"
          }
        }
      },
      "RestOrderDetailsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestOrderDetailsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestOrderDetailsRelationships"
          }
        }
      },
      "RestOrderExpensesAttributes": {
        "properties": {
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sumPrice": {
            "type": "integer"
          },
          "unitGrossPrice": {
            "type": "integer"
          },
          "sumGrossPrice": {
            "type": "integer"
          },
          "taxRate": {
            "type": "number"
          },
          "unitNetPrice": {
            "type": "integer"
          },
          "sumNetPrice": {
            "type": "integer"
          },
          "canceledAmount": {
            "type": "integer"
          },
          "unitDiscountAmountAggregation": {
            "type": "integer"
          },
          "sumDiscountAmountAggregation": {
            "type": "integer"
          },
          "unitTaxAmount": {
            "type": "integer"
          },
          "sumTaxAmount": {
            "type": "integer"
          },
          "unitPriceToPayAggregation": {
            "type": "integer"
          },
          "sumPriceToPayAggregation": {
            "type": "integer"
          },
          "taxAmountAfterCancellation": {
            "type": "integer"
          },
          "idShipment": {
            "type": "integer"
          },
          "idSalesExpense": {
            "type": "integer"
          }
        }
      },
      "RestOrderItemMetadata": {
        "properties": {
          "superAttributes": {
            "type": "array",
            "items": {}
          },
          "image": {
            "type": "string"
          }
        }
      },
      "RestOrderItemProductOptions": {
        "properties": {
          "optionGroupName": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "optionName": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          }
        }
      },
      "RestOrderItemsAttributes": {
        "properties": {
          "salesOrderConfiguredBundle": {
            "$ref": "#/components/schemas/RestSalesOrderConfiguredBundle"
          },
          "salesOrderConfiguredBundleItem": {
            "$ref": "#/components/schemas/RestSalesOrderConfiguredBundleItem"
          },
          "merchantReference": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "sumPrice": {
            "type": "integer"
          },
          "quantity": {
            "type": "integer"
          },
          "metadata": {
            "$ref": "#/components/schemas/RestOrderItemMetadata"
          },
          "calculatedDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestCalculatedDiscount"
            }
          },
          "unitGrossPrice": {
            "type": "integer"
          },
          "sumGrossPrice": {
            "type": "integer"
          },
          "taxRate": {
            "type": "number"
          },
          "unitNetPrice": {
            "type": "integer"
          },
          "sumNetPrice": {
            "type": "integer"
          },
          "unitPrice": {
            "type": "integer"
          },
          "unitTaxAmountFullAggregation": {
            "type": "integer"
          },
          "sumTaxAmountFullAggregation": {
            "type": "integer"
          },
          "refundableAmount": {
            "type": "integer"
          },
          "canceledAmount": {
            "type": "integer"
          },
          "sumSubtotalAggregation": {
            "type": "integer"
          },
          "unitSubtotalAggregation": {
            "type": "integer"
          },
          "unitProductOptionPriceAggregation": {
            "type": "integer"
          },
          "sumProductOptionPriceAggregation": {
            "type": "integer"
          },
          "unitExpensePriceAggregation": {
            "type": "integer"
          },
          "sumExpensePriceAggregation": {
            "type": "integer"
          },
          "unitDiscountAmountAggregation": {
            "type": "integer"
          },
          "sumDiscountAmountAggregation": {
            "type": "integer"
          },
          "unitDiscountAmountFullAggregation": {
            "type": "integer"
          },
          "sumDiscountAmountFullAggregation": {
            "type": "integer"
          },
          "unitPriceToPayAggregation": {
            "type": "integer"
          },
          "sumPriceToPayAggregation": {
            "type": "integer"
          },
          "taxRateAverageAggregation": {
            "type": "number"
          },
          "taxAmountAfterCancellation": {
            "type": "integer"
          },
          "orderReference": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "isReturnable": {
            "type": "boolean"
          },
          "idShipment": {
            "type": "integer"
          },
          "bundleItemIdentifier": {
            "type": "string"
          },
          "relatedBundleItemIdentifier": {
            "type": "string"
          },
          "salesOrderItemConfiguration": {
            "$ref": "#/components/schemas/RestSalesOrderItemProductConfigurationInstanceAttributes"
          },
          "productOfferReference": {
            "type": "string"
          },
          "productOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestOrderItemProductOptions"
            }
          }
        }
      },
      "RestOrderItemsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestOrderItemsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestOrderPayment": {
        "properties": {
          "amount": {
            "type": "integer"
          },
          "paymentProvider": {
            "type": "string"
          },
          "paymentMethod": {
            "type": "string"
          }
        }
      },
      "RestOrderPaymentsAttributes": {
        "properties": {
          "paymentIdentifier": {
            "type": "string"
          },
          "dataPayload": {
            "type": "array",
            "items": {}
          }
        }
      },
      "RestOrderPaymentsRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestOrderPaymentsRequestData"
          }
        }
      },
      "RestOrderPaymentsRequestAttributes": {
        "properties": {
          "paymentIdentifier": {
            "type": "string"
          },
          "dataPayload": {
            "type": "array",
            "items": {}
          }
        },
        "required": [
          "paymentIdentifier",
          "dataPayload"
        ]
      },
      "RestOrderPaymentsRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestOrderPaymentsRequestAttributes"
          }
        }
      },
      "RestOrderPaymentsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestOrderPaymentsResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestOrderPaymentsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestOrderPaymentsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestOrderShipment": {
        "properties": {
          "shipmentMethodName": {
            "type": "string"
          },
          "carrierName": {
            "type": "string"
          },
          "deliveryTime": {
            "type": "integer"
          },
          "defaultGrossPrice": {
            "type": "integer"
          },
          "defaultNetPrice": {
            "type": "integer"
          },
          "currencyIsoCode": {
            "type": "string"
          }
        }
      },
      "RestOrderShipmentsAttributes": {
        "properties": {
          "itemUuids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/RestOrderAddress"
          },
          "methodName": {
            "type": "string"
          },
          "carrierName": {
            "type": "string"
          },
          "requestedDeliveryDate": {
            "type": "string"
          }
        }
      },
      "RestOrderShipmentsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestOrderShipmentsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestOrderTotalsAttributes": {
        "properties": {
          "expenseTotal": {
            "type": "integer"
          },
          "discountTotal": {
            "type": "integer"
          },
          "taxTotal": {
            "type": "integer"
          },
          "subtotal": {
            "type": "integer"
          },
          "grandTotal": {
            "type": "integer"
          },
          "canceledTotal": {
            "type": "integer"
          },
          "remunerationTotal": {
            "type": "integer"
          }
        }
      },
      "RestOrdersAttributes": {
        "properties": {
          "merchantReferences": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string"
          },
          "totals": {
            "$ref": "#/components/schemas/RestOrderTotalsAttributes"
          },
          "currencyIsoCode": {
            "type": "string"
          },
          "priceMode": {
            "type": "string"
          }
        }
      },
      "RestOrdersCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestOrdersCollectionResponseData"
            }
          },
          "included": {
            "$ref": "#/components/schemas/RestOrdersIncluded"
          }
        }
      },
      "RestOrdersCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestOrdersAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestOrdersRelationships"
          }
        }
      },
      "RestOrdersIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestOrderShipmentsResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestOrdersRelationships": {
        "properties": {
          "order-shipments": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "order-amendments": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestOrdersResponseData": {
        "properties": {
          "relationships": {
            "$ref": "#/components/schemas/RestOrdersRelationships"
          }
        }
      },
      "RestPaymentCustomersRequestRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestPaymentCustomersRequestRequestData"
          }
        }
      },
      "RestPaymentCustomersRequestRequestAttributes": {
        "properties": {
          "payment": {
            "$ref": "#/components/schemas/RestPaymentTransfer"
          },
          "customerPaymentServiceProviderData": {
            "type": "array",
            "items": {}
          }
        },
        "required": [
          "payment",
          "customerPaymentServiceProviderData"
        ]
      },
      "RestPaymentCustomersRequestRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestPaymentCustomersRequestRequestAttributes"
          }
        }
      },
      "RestPaymentCustomersResponseAttributes": {
        "properties": {
          "customer": {
            "$ref": "#/components/schemas/RestCustomerResponseAttributes"
          }
        }
      },
      "RestPaymentCustomersResponseResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestPaymentCustomersResponseResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestPaymentCustomersResponseResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/RestPaymentCustomersResponseAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestPaymentMethod": {
        "properties": {
          "paymentMethodName": {
            "type": "string"
          },
          "paymentProviderName": {
            "type": "string"
          },
          "requiredRequestData": {
            "type": "array",
            "items": {}
          },
          "paymentMethodAppConfiguration": {
            "$ref": "#/components/schemas/PaymentMethodAppConfiguration"
          }
        }
      },
      "RestPaymentMethodsAttributes": {
        "properties": {
          "paymentMethodName": {
            "type": "string"
          },
          "paymentProviderName": {
            "type": "string"
          },
          "priority": {
            "type": "integer"
          },
          "requiredRequestData": {
            "type": "array",
            "items": {}
          },
          "paymentMethodAppConfiguration": {
            "$ref": "#/components/schemas/PaymentMethodAppConfiguration"
          }
        }
      },
      "RestPaymentMethodsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestPaymentMethodsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestPaymentProvider": {
        "properties": {
          "paymentProviderName": {
            "type": "string"
          },
          "paymentMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestPaymentMethod"
            }
          }
        }
      },
      "RestPaymentTransfer": {
        "properties": {
          "paymentProviderName": {
            "type": "string"
          },
          "paymentMethodName": {
            "type": "string"
          },
          "paymentSelection": {
            "type": "string"
          },
          "amount": {
            "type": "integer"
          }
        },
        "required": [
          "paymentProviderName",
          "paymentMethodName"
        ]
      },
      "RestPreOrderPaymentCancellationRequestRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestPreOrderPaymentCancellationRequestRequestData"
          }
        }
      },
      "RestPreOrderPaymentCancellationRequestRequestAttributes": {
        "properties": {
          "payment": {
            "$ref": "#/components/schemas/RestPaymentTransfer"
          },
          "preOrderPaymentData": {
            "type": "array",
            "items": {}
          }
        },
        "required": [
          "payment",
          "preOrderPaymentData"
        ]
      },
      "RestPreOrderPaymentCancellationRequestRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestPreOrderPaymentCancellationRequestRequestAttributes"
          }
        }
      },
      "RestPreOrderPaymentRequestRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestPreOrderPaymentRequestRequestData"
          }
        }
      },
      "RestPreOrderPaymentRequestRequestAttributes": {
        "properties": {
          "quote": {
            "$ref": "#/components/schemas/QuoteTransfer"
          },
          "payment": {
            "$ref": "#/components/schemas/RestPaymentTransfer"
          },
          "preOrderPaymentData": {
            "type": "array",
            "items": {}
          }
        },
        "required": [
          "quote",
          "payment"
        ]
      },
      "RestPreOrderPaymentRequestRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestPreOrderPaymentRequestRequestAttributes"
          }
        }
      },
      "RestPriceProduct": {
        "properties": {
          "priceTypeName": {
            "type": "string"
          },
          "grossAmount": {
            "type": "integer"
          },
          "netAmount": {
            "type": "integer"
          },
          "currency": {
            "$ref": "#/components/schemas/RestCurrency"
          }
        }
      },
      "RestProductConcreteAvailability": {
        "properties": {
          "isNeverOutOfStock": {
            "type": "boolean"
          },
          "availability": {
            "type": "boolean"
          },
          "quantity": {
            "type": "number"
          }
        }
      },
      "RestProductConfigurationInstanceAttributes": {
        "properties": {
          "displayData": {
            "type": "string"
          },
          "configuration": {
            "type": "string"
          },
          "configuratorKey": {
            "type": "string"
          },
          "isComplete": {
            "type": "boolean"
          }
        }
      },
      "RestProductConfigurationPriceAttributes": {
        "properties": {
          "netAmount": {
            "type": "integer"
          },
          "grossAmount": {
            "type": "integer"
          },
          "currency": {
            "$ref": "#/components/schemas/RestCurrency"
          },
          "priceTypeName": {
            "type": "string"
          },
          "volumePrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductPriceVolumesAttributes"
            }
          },
          "volumeQuantity": {
            "type": "integer"
          }
        }
      },
      "RestProductImageSet": {
        "properties": {
          "name": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestImagesAttributes"
            }
          }
        }
      },
      "RestProductImageSetsAttributes": {
        "properties": {
          "imageSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductImageSet"
            }
          }
        }
      },
      "RestProductImageSetsCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            }
          }
        }
      },
      "RestProductImageSetsCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestProductImageSetsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestProductLabelsAttributes": {
        "properties": {
          "name": {
            "type": "string"
          },
          "isExclusive": {
            "type": "boolean"
          },
          "position": {
            "type": "integer"
          },
          "frontEndReference": {
            "type": "string"
          }
        }
      },
      "RestProductLabelsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestProductLabelsResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestProductLabelsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestProductLabelsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestProductManagementAttributeAttributes": {
        "properties": {
          "key": {
            "type": "string"
          },
          "inputType": {
            "type": "string"
          },
          "allowInput": {
            "type": "boolean"
          },
          "isSuper": {
            "type": "boolean"
          },
          "localizedKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestLocalizedProductManagementAttributeKeyAttributes"
            }
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductManagementAttributeValueAttributes"
            }
          }
        }
      },
      "RestProductManagementAttributeCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductManagementAttributeCollectionResponseData"
            }
          }
        }
      },
      "RestProductManagementAttributeCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestProductManagementAttributeAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestProductManagementAttributeResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestProductManagementAttributeResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestProductManagementAttributeResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestProductManagementAttributeAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestProductManagementAttributeValueAttributes": {
        "properties": {
          "value": {
            "type": "string"
          },
          "localizedValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductManagementAttributeValueTranslationAttributes"
            }
          }
        }
      },
      "RestProductManagementAttributeValueTranslationAttributes": {
        "properties": {
          "localeName": {
            "type": "string"
          },
          "translation": {
            "type": "string"
          }
        }
      },
      "RestProductOfferAvailabilitiesAttributes": {
        "properties": {
          "isNeverOutOfStock": {
            "type": "boolean"
          },
          "quantity": {
            "type": "number"
          },
          "availability": {
            "type": "boolean"
          }
        }
      },
      "RestProductOfferAvailabilitiesCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductOfferAvailabilitiesCollectionResponseData"
            }
          }
        }
      },
      "RestProductOfferAvailabilitiesCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestProductOfferAvailabilitiesAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestProductOfferPriceAttributes": {
        "properties": {
          "volumePrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductPriceVolumesAttributes"
            }
          },
          "priceTypeName": {
            "type": "string"
          },
          "netAmount": {
            "type": "integer"
          },
          "grossAmount": {
            "type": "integer"
          },
          "currency": {
            "$ref": "#/components/schemas/RestCurrency"
          }
        }
      },
      "RestProductOfferPricesAttributes": {
        "properties": {
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductOfferPriceAttributes"
            }
          },
          "price": {
            "type": "integer"
          }
        }
      },
      "RestProductOfferPricesCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductOfferPricesCollectionResponseData"
            }
          }
        }
      },
      "RestProductOfferPricesCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestProductOfferPricesAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestProductOfferServicePointAvailabilitiesResponseAttributes": {
        "properties": {
          "servicePointUuid": {
            "type": "string"
          },
          "productOfferServicePointAvailabilityResponseItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductOfferServicePointAvailabilityResponseItemsAttributes"
            }
          }
        }
      },
      "RestProductOfferServicePointAvailabilitiesResponseAttributesCollection": {
        "properties": {
          "productOfferServicePointAvailabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductOfferServicePointAvailabilitiesResponseAttributes"
            }
          }
        }
      },
      "RestProductOfferServicePointAvailabilitiesResponseAttributesCollectionTransfer": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestProductOfferServicePointAvailabilitiesResponseAttributesCollectionTransfer"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestProductOfferServicePointAvailabilitiesResponseAttributesCollection"
          }
        }
      },
      "RestProductOfferServicePointAvailabilityResponseItemsAttributes": {
        "properties": {
          "productOfferReference": {
            "type": "string"
          },
          "isNeverOutOfStock": {
            "type": "boolean"
          },
          "isAvailable": {
            "type": "boolean"
          },
          "availableQuantity": {
            "type": "integer"
          },
          "productConcreteSku": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          }
        }
      },
      "RestProductOffersAttributes": {
        "properties": {
          "merchantSku": {
            "type": "string"
          },
          "merchantReference": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          }
        }
      },
      "RestProductOffersCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductOffersCollectionResponseData"
            }
          },
          "included": {
            "$ref": "#/components/schemas/RestProductOffersIncluded"
          }
        }
      },
      "RestProductOffersCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestProductOffersAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestProductOffersRelationships"
          }
        }
      },
      "RestProductOffersIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestMerchantsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferAvailabilitiesCollectionResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestProductOffersRelationships": {
        "properties": {
          "merchants": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "product-offer-prices": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "product-offer-availabilities": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestProductOffersResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestProductOffersResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/RestProductOffersIncluded"
          }
        }
      },
      "RestProductOffersResponseData": {
        "properties": {
          "relationships": {
            "$ref": "#/components/schemas/RestProductOffersRelationships"
          },
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestProductOffersAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestProductOptionsAttributes": {
        "properties": {
          "optionGroupName": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "optionName": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          },
          "currencyIsoCode": {
            "type": "string"
          }
        }
      },
      "RestProductOptionsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestProductOptionsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestProductPriceAttributes": {
        "properties": {
          "volumePrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductPriceVolumesAttributes"
            }
          },
          "priceTypeName": {
            "type": "string"
          },
          "netAmount": {
            "type": "integer"
          },
          "grossAmount": {
            "type": "integer"
          },
          "currency": {
            "$ref": "#/components/schemas/RestCurrency"
          }
        }
      },
      "RestProductPriceVolumesAttributes": {
        "properties": {
          "grossAmount": {
            "type": "integer"
          },
          "netAmount": {
            "type": "integer"
          },
          "quantity": {
            "type": "integer"
          }
        }
      },
      "RestProductPricesAttributes": {
        "properties": {
          "price": {
            "type": "integer"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductPriceAttributes"
            }
          }
        }
      },
      "RestProductPricesCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            }
          }
        }
      },
      "RestProductPricesCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestProductPricesAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestProductReviewsAttributes": {
        "properties": {
          "rating": {
            "type": "integer"
          },
          "nickname": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "RestProductReviewsCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductReviewsCollectionResponseData"
            }
          }
        }
      },
      "RestProductReviewsCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestProductReviewsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestProductReviewsRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestProductReviewsRequestData"
          }
        }
      },
      "RestProductReviewsRequestAttributes": {
        "properties": {
          "rating": {
            "type": "integer"
          },
          "nickname": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "rating",
          "nickname",
          "summary",
          "description"
        ]
      },
      "RestProductReviewsRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestProductReviewsRequestAttributes"
          }
        }
      },
      "RestProductReviewsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestProductReviewsResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestProductReviewsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestProductReviewsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestProductTaxRate": {
        "properties": {
          "name": {
            "type": "string"
          },
          "rate": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "RestProductTaxSetsAttributes": {
        "properties": {
          "name": {
            "type": "string"
          },
          "restTaxRates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductTaxRate"
            }
          }
        }
      },
      "RestProductTaxSetsCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductTaxSetsCollectionResponseData"
            }
          }
        }
      },
      "RestProductTaxSetsCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestProductTaxSetsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestPromotionalItemsAttributes": {
        "properties": {
          "sku": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "skus": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RestPromotionalItemsRelationships": {
        "properties": {
          "abstract-products": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestPromotionalItemsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestPromotionalItemsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestPromotionalItemsRelationships"
          }
        }
      },
      "RestRangeSearchResult": {
        "properties": {
          "name": {
            "type": "string"
          },
          "localizedName": {
            "type": "string"
          },
          "min": {
            "type": "number"
          },
          "max": {
            "type": "number"
          },
          "activeMin": {
            "type": "number"
          },
          "activeMax": {
            "type": "number"
          },
          "docCount": {
            "type": "integer"
          },
          "config": {
            "$ref": "#/components/schemas/RestFacetConfig"
          }
        }
      },
      "RestRefreshTokensRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestRefreshTokensRequestData"
          }
        }
      },
      "RestRefreshTokensRequestAttributes": {
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "RestRefreshTokensRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestRefreshTokensRequestAttributes"
          }
        }
      },
      "RestRelationships": {
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "RestRelationshipsData": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestRelationships"
            }
          }
        }
      },
      "RestReturnItemRequestAttributes": {
        "properties": {
          "salesOrderItemUuid": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "RestReturnItemRequestRequestAttributes": {
        "properties": {
          "salesOrderItemUuid": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "RestReturnReasonsAttributes": {
        "properties": {
          "reason": {
            "type": "string"
          }
        }
      },
      "RestReturnReasonsCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestReturnReasonsCollectionResponseData"
            }
          }
        }
      },
      "RestReturnReasonsCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestReturnReasonsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestReturnRequestAttributes": {
        "properties": {
          "store": {
            "type": "string"
          },
          "returnItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestReturnItemRequestAttributes"
            }
          }
        }
      },
      "RestReturnRequestCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestReturnRequestCollectionResponseData"
            }
          },
          "included": {
            "$ref": "#/components/schemas/RestReturnRequestIncluded"
          }
        }
      },
      "RestReturnRequestCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestReturnRequestAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestReturnRequestRelationships"
          }
        }
      },
      "RestReturnRequestIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestReturnsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestReturnRequestRelationships": {
        "properties": {
          "return-items": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "merchants": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestReturnRequestRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestReturnRequestRequestData"
          }
        }
      },
      "RestReturnRequestRequestAttributes": {
        "properties": {
          "store": {
            "type": "string"
          },
          "returnItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestReturnItemRequestRequestAttributes"
            }
          }
        }
      },
      "RestReturnRequestRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestReturnRequestRequestAttributes"
          }
        }
      },
      "RestReturnRequestResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestReturnRequestResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/RestReturnRequestIncluded"
          }
        }
      },
      "RestReturnRequestResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestReturnRequestAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestReturnRequestRelationships"
          }
        }
      },
      "RestReturnTotalsAttributes": {
        "properties": {
          "refundTotal": {
            "type": "integer"
          },
          "remunerationTotal": {
            "type": "integer"
          }
        }
      },
      "RestReturnsAttributes": {
        "properties": {
          "returnReference": {
            "type": "string"
          },
          "store": {
            "type": "string"
          },
          "customerReference": {
            "type": "string"
          },
          "returnTotals": {
            "$ref": "#/components/schemas/RestReturnTotalsAttributes"
          }
        }
      },
      "RestReturnsIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestReturnsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestReturnsRelationships": {
        "properties": {
          "return-items": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "merchants": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "order-items": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestReturnsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestReturnsResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/RestReturnsIncluded"
          }
        }
      },
      "RestReturnsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestReturnsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestReturnsRelationships"
          }
        }
      },
      "RestSalesOrderConfiguredBundle": {
        "properties": {
          "idSalesOrderConfiguredBundle": {
            "type": "integer"
          },
          "configurableBundleTemplateUuid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          }
        }
      },
      "RestSalesOrderConfiguredBundleItem": {
        "properties": {
          "idSalesOrderConfiguredBundle": {
            "type": "integer"
          },
          "configurableBundleTemplateSlotUuid": {
            "type": "string"
          }
        }
      },
      "RestSalesOrderItemProductConfigurationInstanceAttributes": {
        "properties": {
          "displayData": {
            "type": "string"
          },
          "configuration": {
            "type": "string"
          },
          "configuratorKey": {
            "type": "string"
          }
        }
      },
      "RestServicePoint": {
        "properties": {
          "idServicePoint": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RestServicePointAddressesAttributes": {
        "properties": {
          "countryIso2Code": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          }
        }
      },
      "RestServicePointAddressesResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestServicePointAddressesResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestServicePointAddressesResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestServicePointAddressesAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestServicePointTransfer": {
        "properties": {
          "idServicePoint": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RestServicePointsAttributes": {
        "properties": {
          "name": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "RestServicePointsCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestServicePointsCollectionResponseData"
            }
          },
          "included": {
            "$ref": "#/components/schemas/RestServicePointsIncluded"
          }
        }
      },
      "RestServicePointsCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestServicePointsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestServicePointsRelationships"
          }
        }
      },
      "RestServicePointsIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestServicePointAddressesResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestServicePointsRelationships": {
        "properties": {
          "service-point-addresses": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestServicePointsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestServicePointsResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/RestServicePointsIncluded"
          }
        }
      },
      "RestServicePointsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestServicePointsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestServicePointsRelationships"
          }
        }
      },
      "RestServiceTypesAttributes": {
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "RestServiceTypesResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestServiceTypesAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestShipmentMethod": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "carrierName": {
            "type": "string"
          },
          "price": {
            "type": "integer"
          },
          "taxRate": {
            "type": "number"
          },
          "deliveryTime": {
            "type": "integer"
          },
          "currencyIsoCode": {
            "type": "string"
          }
        }
      },
      "RestShipmentMethodsAttributes": {
        "properties": {
          "name": {
            "type": "string"
          },
          "carrierName": {
            "type": "string"
          },
          "deliveryTime": {
            "type": "integer"
          },
          "price": {
            "type": "integer"
          },
          "currencyIsoCode": {
            "type": "string"
          }
        }
      },
      "RestShipmentMethodsRelationships": {
        "properties": {
          "shipment-types": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestShipmentMethodsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestShipmentMethodsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestShipmentMethodsRelationships"
          }
        }
      },
      "RestShipmentTransfer": {
        "properties": {
          "idShipmentMethod": {
            "type": "integer"
          }
        }
      },
      "RestShipmentType": {
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "RestShipmentTypesAttributes": {
        "properties": {
          "name": {
            "type": "string"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "RestShipmentTypesCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestShipmentTypesCollectionResponseData"
            }
          },
          "included": {
            "$ref": "#/components/schemas/RestShipmentTypesIncluded"
          }
        }
      },
      "RestShipmentTypesCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestShipmentTypesAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestShipmentTypesRelationships"
          }
        }
      },
      "RestShipmentTypesIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/RestServiceTypesResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestShipmentTypesRelationships": {
        "properties": {
          "service-types": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestShipmentTypesResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestShipmentTypesResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/RestShipmentTypesIncluded"
          }
        }
      },
      "RestShipmentTypesResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestShipmentTypesAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestShipmentTypesRelationships"
          }
        }
      },
      "RestShipmentsAttributes": {
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/RestAddress"
          },
          "selectedShipmentMethod": {
            "$ref": "#/components/schemas/RestShipmentMethod"
          },
          "requestedDeliveryDate": {
            "type": "string"
          }
        }
      },
      "RestShipmentsRelationships": {
        "properties": {
          "shipment-methods": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestShipmentsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestShipmentsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestShipmentsRelationships"
          }
        }
      },
      "RestShipmentsTransfer": {
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "idShipmentMethod": {
            "type": "integer"
          },
          "shippingAddress": {
            "$ref": "#/components/schemas/RestAddressTransfer"
          },
          "requestedDeliveryDate": {
            "type": "string"
          }
        }
      },
      "RestTaxAppValidationAttributes": {
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "taxId": {
            "type": "string"
          }
        }
      },
      "RestTaxAppValidationResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestTaxAppValidationResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestTaxAppValidationResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestTaxAppValidationAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestTokenAttributes": {
        "properties": {
          "grantType": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "RestTokenResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestTokenResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestTokenResponseAttributes": {
        "properties": {
          "tokenType": {
            "type": "string"
          },
          "expiresIn": {
            "type": "string"
          },
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "RestTokenResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestTokenAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestTokenResponseResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestTokenResponseResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestTokenResponseResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "attributes": {
            "$ref": "#/components/schemas/RestTokenResponseAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestUrlResolverAttributes": {
        "properties": {
          "entityType": {
            "type": "string"
          },
          "entityId": {
            "type": "string"
          }
        }
      },
      "RestUrlResolverCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestUrlResolverCollectionResponseData"
            }
          }
        }
      },
      "RestUrlResolverCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestUrlResolverAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestWeekdaySchedule": {
        "properties": {
          "day": {
            "type": "string"
          },
          "timeFrom": {
            "type": "string"
          },
          "timeTo": {
            "type": "string"
          }
        }
      },
      "RestWishlistItemProductConfigurationInstanceAttributes": {
        "properties": {
          "displayData": {
            "type": "string"
          },
          "configuration": {
            "type": "string"
          },
          "configuratorKey": {
            "type": "string"
          },
          "isComplete": {
            "type": "boolean"
          },
          "quantity": {
            "type": "integer"
          },
          "availableQuantity": {
            "type": "integer"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestProductConfigurationPriceAttributes"
            }
          }
        }
      },
      "RestWishlistItemProductConfigurationInstanceRequestAttributes": {
        "properties": {
          "displayData": {
            "type": "string"
          },
          "configuration": {
            "type": "string"
          },
          "configuratorKey": {
            "type": "string"
          },
          "isComplete": {
            "type": "boolean"
          },
          "availableQuantity": {
            "type": "integer"
          }
        },
        "required": [
          "displayData",
          "configuration",
          "configuratorKey",
          "isComplete",
          "availableQuantity"
        ]
      },
      "RestWishlistItemsAttributes": {
        "properties": {
          "productOfferReference": {
            "type": "string"
          },
          "merchantReference": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "availability": {
            "$ref": "#/components/schemas/RestProductConcreteAvailability"
          },
          "productConfigurationInstance": {
            "$ref": "#/components/schemas/RestWishlistItemProductConfigurationInstanceAttributes"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestPriceProduct"
            }
          },
          "sku": {
            "type": "string"
          }
        }
      },
      "RestWishlistItemsIncluded": {
        "items": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/ConcreteProductsRestResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductImageSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestConcreteProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductLabelsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductReviewsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOptionsResponseData"
            },
            {
              "$ref": "#/components/schemas/RestBundledProductsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/AbstractProductsRestCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestAbstractProductAvailabilityCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestCategoryNodesResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductTaxSetsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantsCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantAddressesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestMerchantOpeningHoursCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOffersCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferPricesCollectionResponseData"
            },
            {
              "$ref": "#/components/schemas/RestProductOfferAvailabilitiesCollectionResponseData"
            }
          ]
        },
        "type": "array"
      },
      "RestWishlistItemsRelationships": {
        "properties": {
          "concrete-products": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          },
          "merchants": {
            "$ref": "#/components/schemas/RestRelationshipsData"
          }
        }
      },
      "RestWishlistItemsRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestWishlistItemsRequestData"
          }
        }
      },
      "RestWishlistItemsRequestAttributes": {
        "properties": {
          "productConfigurationInstance": {
            "$ref": "#/components/schemas/RestWishlistItemProductConfigurationInstanceRequestAttributes"
          },
          "sku": {
            "type": "string"
          }
        },
        "required": [
          "sku"
        ]
      },
      "RestWishlistItemsRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestWishlistItemsRequestAttributes"
          }
        }
      },
      "RestWishlistItemsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestWishlistItemsResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "included": {
            "$ref": "#/components/schemas/RestWishlistItemsIncluded"
          }
        }
      },
      "RestWishlistItemsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestWishlistItemsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          },
          "relationships": {
            "$ref": "#/components/schemas/RestWishlistItemsRelationships"
          }
        }
      },
      "RestWishlistsAttributes": {
        "properties": {
          "name": {
            "type": "string"
          },
          "numberOfItems": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "RestWishlistsCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestWishlistsCollectionResponseData"
            }
          }
        }
      },
      "RestWishlistsCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestWishlistsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestWishlistsRequest": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestWishlistsRequestData"
          }
        }
      },
      "RestWishlistsRequestAttributes": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "RestWishlistsRequestData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestWishlistsRequestAttributes"
          }
        }
      },
      "RestWishlistsResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RestWishlistsResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "RestWishlistsResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/RestWishlistsAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "Script": {
        "properties": {
          "url": {
            "type": "string"
          },
          "queryParams": {
            "type": "array",
            "items": {}
          },
          "scriptParameters": {
            "type": "array",
            "items": {}
          }
        }
      },
      "StoreCountryRestAttributes": {
        "properties": {
          "iso2Code": {
            "type": "string"
          },
          "iso3Code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "postalCodeMandatory": {
            "type": "boolean"
          },
          "postalCodeRegex": {
            "type": "string"
          },
          "regions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreRegionRestAttributes"
            }
          }
        }
      },
      "StoreCurrencyRestAttributes": {
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "StoreLocaleRestAttributes": {
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "StoreRegionRestAttributes": {
        "properties": {
          "iso2Code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "StoresRestAttributes": {
        "properties": {
          "timeZone": {
            "type": "string"
          },
          "defaultCurrency": {
            "type": "string"
          },
          "currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreCurrencyRestAttributes"
            }
          },
          "locales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreLocaleRestAttributes"
            }
          },
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreCountryRestAttributes"
            }
          }
        }
      },
      "StoresRestCollectionResponse": {
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoresRestCollectionResponseData"
            }
          }
        }
      },
      "StoresRestCollectionResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/StoresRestAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "StoresRestResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/StoresRestResponseData"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      },
      "StoresRestResponseData": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/StoresRestAttributes"
          },
          "links": {
            "$ref": "#/components/schemas/RestLinks"
          }
        }
      }
    },
    "parameters": {
      "acceptLanguage": {
        "name": "Accept-Language",
        "in": "header",
        "description": "Locale value relevant for the store.",
        "schema": {
          "type": "string"
        },
        "required": false
      }
    }
  }
}
